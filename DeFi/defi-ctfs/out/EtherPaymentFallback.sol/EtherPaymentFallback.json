{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SafeReceived",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50607a8061001e6000396000f3fe608060405236603f5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b600080fdfea2646970667358221220462664307aa2c22fdd436cd2e5cb3ac9bf2468a90b21083c0e61efc9b6365a7064736f6c634300080f0033",
    "sourceMap": "221:252:60:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405236603f5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b600080fdfea2646970667358221220462664307aa2c22fdd436cd2e5cb3ac9bf2468a90b21083c0e61efc9b6365a7064736f6c634300080f0033",
    "sourceMap": "221:252:60:-:0;;;;;;427:35;;452:9;160:25:123;;440:10:60;;427:35;;148:2:123;133:18;427:35:60;;;;;;;221:252;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeReceived\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Richard Meissner - <richard@gnosis.pm>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EtherPaymentFallback - A contract that has a fallback to accept ether payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":\"EtherPaymentFallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@safe/=lib/safe-contracts/\",\":@uniswapv2/=src/src-0_6_x/uniswapv2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\"]},\"sources\":{\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x6b1a79c3b51bf7c2a042230d6477c995ee1d9d3486941d2480ed1a64459bd1a8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fa5274c73c02db43271ad19ea53f859e1bcdf73ac5fd8fed1fa9e114c8ec9c4d\",\"dweb:/ipfs/QmUKq9tFUA3jyfpjeN66BH1aCppqhDZUxsgAbUJUq42WYt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SafeReceived",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@safe/=lib/safe-contracts/",
        ":@uniswapv2/=src/src-0_6_x/uniswapv2/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":safe-contracts/=lib/safe-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/safe-contracts/contracts/common/EtherPaymentFallback.sol": "EtherPaymentFallback"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe-contracts/contracts/common/EtherPaymentFallback.sol": {
        "keccak256": "0x6b1a79c3b51bf7c2a042230d6477c995ee1d9d3486941d2480ed1a64459bd1a8",
        "urls": [
          "bzz-raw://fa5274c73c02db43271ad19ea53f859e1bcdf73ac5fd8fed1fa9e114c8ec9c4d",
          "dweb:/ipfs/QmUKq9tFUA3jyfpjeN66BH1aCppqhDZUxsgAbUJUq42WYt"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/safe-contracts/contracts/common/EtherPaymentFallback.sol",
    "id": 33559,
    "exportedSymbols": {
      "EtherPaymentFallback": [
        33558
      ]
    },
    "nodeType": "SourceUnit",
    "src": "43:432:60",
    "nodes": [
      {
        "id": 33538,
        "nodeType": "PragmaDirective",
        "src": "43:31:60",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 33558,
        "nodeType": "ContractDefinition",
        "src": "221:252:60",
        "nodes": [
          {
            "id": 33545,
            "nodeType": "EventDefinition",
            "src": "258:58:60",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d",
            "name": "SafeReceived",
            "nameLocation": "264:12:60",
            "parameters": {
              "id": 33544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33541,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "293:6:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 33545,
                  "src": "277:22:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:60",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33543,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "309:5:60",
                  "nodeType": "VariableDeclaration",
                  "scope": 33545,
                  "src": "301:13:60",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "301:7:60",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "276:39:60"
            }
          },
          {
            "id": 33557,
            "nodeType": "FunctionDefinition",
            "src": "384:86:60",
            "nodes": [],
            "body": {
              "id": 33556,
              "nodeType": "Block",
              "src": "411:59:60",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 33550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "440:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "440:10:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 33552,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "452:3:60",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 33553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "452:9:60",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33549,
                      "name": "SafeReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33545,
                      "src": "427:12:60",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 33554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:35:60",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33555,
                  "nodeType": "EmitStatement",
                  "src": "422:40:60"
                }
              ]
            },
            "documentation": {
              "id": 33546,
              "nodeType": "StructuredDocumentation",
              "src": "324:54:60",
              "text": "@dev Fallback function accepts Ether transactions."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "391:2:60"
            },
            "returnParameters": {
              "id": 33548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:60"
            },
            "scope": 33558,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EtherPaymentFallback",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33539,
          "nodeType": "StructuredDocumentation",
          "src": "78:143:60",
          "text": "@title EtherPaymentFallback - A contract that has a fallback to accept ether payments\n @author Richard Meissner - <richard@gnosis.pm>"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33558
        ],
        "name": "EtherPaymentFallback",
        "nameLocation": "230:20:60",
        "scope": 33559,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 60
}