{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "masterCopyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "walletFactoryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "initialBeneficiaries",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "addBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "beneficiaries",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract GnosisSafeProxy",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "singleton",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "initializer",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proxyCreated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "walletFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wallets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162000ef838038062000ef88339810160408190526200003491620001ef565b6200003f33620000da565b6001600160a01b0384166200005357600080fd5b6001600160a01b0383166200006757600080fd5b6001600160a01b0380851660805283811660a052821660c05260005b8151811015620000cf57620000ba828281518110620000a657620000a6620002fa565b60200260200101516200012a60201b60201c565b80620000c68162000310565b91505062000083565b505050505062000338565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001346200015b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314620001ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b80516001600160a01b0381168114620001d457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156200020657600080fd5b6200021185620001bc565b9350602062000222818701620001bc565b93506200023260408701620001bc565b60608701519093506001600160401b03808211156200025057600080fd5b818801915088601f8301126200026557600080fd5b8151818111156200027a576200027a620001d9565b8060051b604051601f19603f83011681018181108582111715620002a257620002a2620001d9565b60405291825284820192508381018501918b831115620002c157600080fd5b938501935b82851015620002ea57620002da85620001bc565b84529385019392850192620002c6565b989b979a50959850505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200033157634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05160c051610b7462000384600039600081816101c30152818161020401526106f601526000818161018901526102d6015260008181610162015261033e0152610b746000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461014c578063a619486e1461015d578063c5c0369914610184578063f2fde38b146101ab578063fc0c546a146101be57600080fd5b806301567739146100a35780631e52b518146100db5780635926651d146100f0578063715018a61461010357806389b08f111461010b575b600080fd5b6100c66100b13660046108ea565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e936600461090e565b6101e5565b005b6100ee6100fe3660046108ea565b61076f565b6100ee61079e565b6101346101193660046108ea565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6000546001600160a01b0316610134565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6100ee6101b93660046108ea565b6107b2565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b8152306004820152678ac7230489e80000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027791906109a8565b10156102ca5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682066756e647320746f2070617900000000000000000060448201526064015b60405180910390fd5b84336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033c5760405162461bcd60e51b815260206004820152601660248201527543616c6c6572206d75737420626520666163746f727960501b60448201526064016102c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146103b45760405162461bcd60e51b815260206004820152601460248201527311985ad9481b585cdd195c98dbdc1e481d5cd95960621b60448201526064016102c1565b63b63e800d60e01b6103ca6004600086886109c1565b6103d3916109eb565b6001600160e01b031916146104215760405162461bcd60e51b81526020600482015260146024820152732bb937b7339034b734ba34b0b634bd30ba34b7b760611b60448201526064016102c1565b6001816001600160a01b031663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048591906109a8565b146104c65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a1c995cda1bdb19607a1b60448201526064016102c1565b6001816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052e9190810190610a41565b511461057c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f66206f776e657273000000000000000060448201526064016102c1565b6000816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e49190810190610a41565b6000815181106105f6576105f6610b06565b6020908102919091018101516001600160a01b0381166000908152600190925260409091205490915060ff1661067d5760405162461bcd60e51b815260206004820152602660248201527f4f776e6572206973206e6f7420726567697374657265642061732062656e656660448201526569636961727960d01b60648201526084016102c1565b6106a2816001600160a01b03166000908152600160205260409020805460ff19169055565b6001600160a01b038181166000908152600260205260409081902080546001600160a01b031916858416908117909155905163a9059cbb60e01b81526004810191909152678ac7230489e8000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190610b1c565b5050505050505050565b61077761082b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6107a661082b565b6107b06000610885565b565b6107ba61082b565b6001600160a01b03811661081f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c1565b61082881610885565b50565b6000546001600160a01b031633146107b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461082857600080fd5b6000602082840312156108fc57600080fd5b8135610907816108d5565b9392505050565b60008060008060006080868803121561092657600080fd5b8535610931816108d5565b94506020860135610941816108d5565b9350604086013567ffffffffffffffff8082111561095e57600080fd5b818801915088601f83011261097257600080fd5b81358181111561098157600080fd5b89602082850101111561099357600080fd5b96999598505060200195606001359392505050565b6000602082840312156109ba57600080fd5b5051919050565b600080858511156109d157600080fd5b838611156109de57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610a135780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b8051610a3c816108d5565b919050565b60006020808385031215610a5457600080fd5b825167ffffffffffffffff80821115610a6c57600080fd5b818501915085601f830112610a8057600080fd5b815181811115610a9257610a92610a1b565b8060051b604051601f19603f83011681018181108582111715610ab757610ab7610a1b565b604052918252848201925083810185019188831115610ad557600080fd5b938501935b82851015610afa57610aeb85610a31565b84529385019392850192610ada565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b2e57600080fd5b8151801515811461090757600080fdfea26469706673582212208c035f2324ff51492e4e72503ae401a4044ac51377a9c37282b7df21df03b5cb64736f6c634300080f0033",
    "sourceMap": "570:3045:92:-:0;;;1070:552;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:27;719:10:45;936:18:27;:32::i;:::-;-1:-1:-1;;;;;1263:31:92;;1255:40;;;;;;-1:-1:-1;;;;;1314:34:92;;1306:43;;;;;;-1:-1:-1;;;;;1362:30:92;;;;;1403:36;;;;;1450:28;;;;1496:9;1491:124;1515:20;:27;1511:1;:31;1491:124;;;1564:39;1579:20;1600:1;1579:23;;;;;;;;:::i;:::-;;;;;;;1564:14;;;:39;;:::i;:::-;1544:3;;;;:::i;:::-;;;;1491:124;;;;1070:552;;;;570:3045;;2433:187:27;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:27;;;-1:-1:-1;;;;;;2541:17:27;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1630:114:92:-;1094:13:27;:11;:13::i;:::-;-1:-1:-1;;;;;1703:26:92::1;;::::0;;;1732:4:::1;1703:26;::::0;;;;;;;:33;;-1:-1:-1;;1703:33:92::1;::::0;;::::1;::::0;;1630:114::o;1359:130:27:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:27;719:10:45;1422:23:27;1414:68;;;;-1:-1:-1;;;1414:68:27;;2289:2:126;1414:68:27;;;2271:21:126;;;2308:18;;;2301:30;2367:34;2347:18;;;2340:62;2419:18;;1414:68:27;;;;;;;;1359:130::o;14:177:126:-;93:13;;-1:-1:-1;;;;;135:31:126;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1385;450:6;458;466;474;527:3;515:9;506:7;502:23;498:33;495:53;;;544:1;541;534:12;495:53;567:40;597:9;567:40;:::i;:::-;557:50;;626:2;647:49;692:2;681:9;677:18;647:49;:::i;:::-;637:59;;715:49;760:2;749:9;745:18;715:49;:::i;:::-;808:2;793:18;;787:25;705:59;;-1:-1:-1;;;;;;861:14:126;;;858:34;;;888:1;885;878:12;858:34;926:6;915:9;911:22;901:32;;971:7;964:4;960:2;956:13;952:27;942:55;;993:1;990;983:12;942:55;1022:2;1016:9;1044:2;1040;1037:10;1034:36;;;1050:18;;:::i;:::-;1096:2;1093:1;1089:10;1128:2;1122:9;1191:2;1187:7;1182:2;1178;1174:11;1170:25;1162:6;1158:38;1246:6;1234:10;1231:22;1226:2;1214:10;1211:18;1208:46;1205:72;;;1257:18;;:::i;:::-;1293:2;1286:22;1343:18;;;1377:15;;;;-1:-1:-1;1419:11:126;;;1415:20;;;1447:19;;;1444:39;;;1479:1;1476;1469:12;1444:39;1503:11;;;;1523:159;1539:6;1534:3;1531:15;1523:159;;;1605:34;1635:3;1605:34;:::i;:::-;1593:47;;1556:12;;;;1660;;;;1523:159;;;328:1385;;;;-1:-1:-1;328:1385:126;;-1:-1:-1;;;;;;;328:1385:126:o;1718:127::-;1779:10;1774:3;1770:20;1767:1;1760:31;1810:4;1807:1;1800:15;1834:4;1831:1;1824:15;1850:232;1889:3;1910:17;;;1907:140;;1969:10;1964:3;1960:20;1957:1;1950:31;2004:4;2001:1;1994:15;2032:4;2029:1;2022:15;1907:140;-1:-1:-1;2074:1:126;2063:13;;1850:232::o;2087:356::-;570:3045:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461014c578063a619486e1461015d578063c5c0369914610184578063f2fde38b146101ab578063fc0c546a146101be57600080fd5b806301567739146100a35780631e52b518146100db5780635926651d146100f0578063715018a61461010357806389b08f111461010b575b600080fd5b6100c66100b13660046108ea565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e936600461090e565b6101e5565b005b6100ee6100fe3660046108ea565b61076f565b6100ee61079e565b6101346101193660046108ea565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6000546001600160a01b0316610134565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6100ee6101b93660046108ea565b6107b2565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b8152306004820152678ac7230489e80000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027791906109a8565b10156102ca5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682066756e647320746f2070617900000000000000000060448201526064015b60405180910390fd5b84336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033c5760405162461bcd60e51b815260206004820152601660248201527543616c6c6572206d75737420626520666163746f727960501b60448201526064016102c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146103b45760405162461bcd60e51b815260206004820152601460248201527311985ad9481b585cdd195c98dbdc1e481d5cd95960621b60448201526064016102c1565b63b63e800d60e01b6103ca6004600086886109c1565b6103d3916109eb565b6001600160e01b031916146104215760405162461bcd60e51b81526020600482015260146024820152732bb937b7339034b734ba34b0b634bd30ba34b7b760611b60448201526064016102c1565b6001816001600160a01b031663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048591906109a8565b146104c65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a1c995cda1bdb19607a1b60448201526064016102c1565b6001816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052e9190810190610a41565b511461057c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f66206f776e657273000000000000000060448201526064016102c1565b6000816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e49190810190610a41565b6000815181106105f6576105f6610b06565b6020908102919091018101516001600160a01b0381166000908152600190925260409091205490915060ff1661067d5760405162461bcd60e51b815260206004820152602660248201527f4f776e6572206973206e6f7420726567697374657265642061732062656e656660448201526569636961727960d01b60648201526084016102c1565b6106a2816001600160a01b03166000908152600160205260409020805460ff19169055565b6001600160a01b038181166000908152600260205260409081902080546001600160a01b031916858416908117909155905163a9059cbb60e01b81526004810191909152678ac7230489e8000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190610b1c565b5050505050505050565b61077761082b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6107a661082b565b6107b06000610885565b565b6107ba61082b565b6001600160a01b03811661081f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c1565b61082881610885565b50565b6000546001600160a01b031633146107b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461082857600080fd5b6000602082840312156108fc57600080fd5b8135610907816108d5565b9392505050565b60008060008060006080868803121561092657600080fd5b8535610931816108d5565b94506020860135610941816108d5565b9350604086013567ffffffffffffffff8082111561095e57600080fd5b818801915088601f83011261097257600080fd5b81358181111561098157600080fd5b89602082850101111561099357600080fd5b96999598505060200195606001359392505050565b6000602082840312156109ba57600080fd5b5051919050565b600080858511156109d157600080fd5b838611156109de57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610a135780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b8051610a3c816108d5565b919050565b60006020808385031215610a5457600080fd5b825167ffffffffffffffff80821115610a6c57600080fd5b818501915085601f830112610a8057600080fd5b815181811115610a9257610a92610a1b565b8060051b604051601f19603f83011681018181108582111715610ab757610ab7610a1b565b604052918252848201925083810185019188831115610ad557600080fd5b938501935b82851015610afa57610aeb85610a31565b84529385019392850192610ada565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b2e57600080fd5b8151801515811461090757600080fdfea26469706673582212208c035f2324ff51492e4e72503ae401a4044ac51377a9c37282b7df21df03b5cb64736f6c634300080f0033",
    "sourceMap": "570:3045:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;567:14:126;;560:22;542:41;;530:2;515:18;939:46:92;;;;;;;;2073:1539;;;;;;:::i;:::-;;:::i;:::-;;1630:114;;;;;;:::i;:::-;;:::i;1831:101:27:-;;;:::i;1018:43:92:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1018:43:92;;;;;;-1:-1:-1;;;;;1724:32:126;;;1706:51;;1694:2;1679:18;1018:43:92;1560:203:126;1201:85:27;1247:7;1273:6;-1:-1:-1;;;;;1273:6:27;1201:85;;814:35:92;;;;;856:38;;;;;2081:198:27;;;;;;:::i;:::-;;:::i;901:29:92:-;;;;;2073:1539;2302:30;;-1:-1:-1;;;2302:30:92;;2326:4;2302:30;;;1706:51:126;776:8:92;;2302:5;-1:-1:-1;;;;;2302:15:92;;;;1679:18:126;;2302:30:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;2294:83;;;;-1:-1:-1;;;2294:83:92;;2383:2:126;2294:83:92;;;2365:21:126;2422:2;2402:18;;;2395:30;2461:25;2441:18;;;2434:53;2504:18;;2294:83:92;;;;;;;;;2430:5;2508:10;-1:-1:-1;;;;;2522:13:92;2508:27;;2500:62;;;;-1:-1:-1;;;2500:62:92;;2735:2:126;2500:62:92;;;2717:21:126;2774:2;2754:18;;;2747:30;-1:-1:-1;;;2793:18:126;;;2786:52;2855:18;;2500:62:92;2533:346:126;2500:62:92;2594:10;-1:-1:-1;;;;;2581:23:92;:9;-1:-1:-1;;;;;2581:23:92;;2573:56;;;;-1:-1:-1;;;2573:56:92;;3086:2:126;2573:56:92;;;3068:21:126;3125:2;3105:18;;;3098:30;-1:-1:-1;;;3144:18:126;;;3137:50;3204:18;;2573:56:92;2884:344:126;2573:56:92;-1:-1:-1;;;2735:15:92;2748:1;2735:15;:11;;:15;:::i;:::-;2728:23;;;:::i;:::-;-1:-1:-1;;;;;;2728:52:92;;2720:85;;;;-1:-1:-1;;;2720:85:92;;4099:2:126;2720:85:92;;;4081:21:126;4138:2;4118:18;;;4111:30;-1:-1:-1;;;4157:18:126;;;4150:50;4217:18;;2720:85:92;3897:344:126;2720:85:92;727:1;2894:13;-1:-1:-1;;;;;2883:38:92;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;2875:87;;;;-1:-1:-1;;;2875:87:92;;4448:2:126;2875:87:92;;;4430:21:126;4487:2;4467:18;;;4460:30;-1:-1:-1;;;4506:18:126;;;4499:47;4563:18;;2875:87:92;4246:341:126;2875:87:92;678:1;2992:13;-1:-1:-1;;;;;2981:35:92;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2981:37:92;;;;;;;;;;;;:::i;:::-;:44;:58;2973:95;;;;-1:-1:-1;;;2973:95:92;;6203:2:126;2973:95:92;;;6185:21:126;6242:2;6222:18;;;6215:30;6281:26;6261:18;;;6254:54;6325:18;;2973:95:92;6001:348:126;2973:95:92;3145:19;3178:13;-1:-1:-1;;;;;3167:35:92;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3167:37:92;;;;;;;;;;;;:::i;:::-;3205:1;3167:40;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3228:26:92;;;;;;:13;:26;;;;;;;;3167:40;;-1:-1:-1;3228:26:92;;3220:77;;;;-1:-1:-1;;;3220:77:92;;6688:2:126;3220:77:92;;;6670:21:126;6727:2;6707:18;;;6700:30;6766:34;6746:18;;;6739:62;-1:-1:-1;;;6817:18:126;;;6810:36;6863:19;;3220:77:92;6486:402:126;3220:77:92;3350:31;3369:11;-1:-1:-1;;;;;1820:26:92;1849:5;1820:26;;;:13;:26;;;;;:34;;-1:-1:-1;;1820:34:92;;;1752:110;3350:31;-1:-1:-1;;;;;3452:20:92;;;;;;;:7;:20;;;;;;;:36;;-1:-1:-1;;;;;;3452:36:92;;;;;;;;;;3552:44;;-1:-1:-1;;;3552:44:92;;;;;7075:51:126;;;;776:8:92;7142:18:126;;;7135:34;3552:5:92;:14;;;;;;7048:18:126;;3552:44:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2235:1377;;2073:1539;;;;;:::o;1630:114::-;1094:13:27;:11;:13::i;:::-;-1:-1:-1;;;;;1703:26:92::1;;::::0;;;1732:4:::1;1703:26;::::0;;;;;;;:33;;-1:-1:-1;;1703:33:92::1;::::0;;::::1;::::0;;1630:114::o;1831:101:27:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2081:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:27;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:27;;7664:2:126;2161:73:27::1;::::0;::::1;7646:21:126::0;7703:2;7683:18;;;7676:30;7742:34;7722:18;;;7715:62;-1:-1:-1;;;7793:18:126;;;7786:36;7839:19;;2161:73:27::1;7462:402:126::0;2161:73:27::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:27;719:10:45;1422:23:27;1414:68;;;;-1:-1:-1;;;1414:68:27;;8071:2:126;1414:68:27;;;8053:21:126;;;8090:18;;;8083:30;8149:34;8129:18;;;8122:62;8201:18;;1414:68:27;7869:356:126;2433:187:27;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:27;;;-1:-1:-1;;;;;;2541:17:27;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:131:126:-;-1:-1:-1;;;;;89:31:126;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:126:o;594:961::-;716:6;724;732;740;748;801:3;789:9;780:7;776:23;772:33;769:53;;;818:1;815;808:12;769:53;857:9;844:23;876:31;901:5;876:31;:::i;:::-;926:5;-1:-1:-1;983:2:126;968:18;;955:32;996:33;955:32;996:33;:::i;:::-;1048:7;-1:-1:-1;1106:2:126;1091:18;;1078:32;1129:18;1159:14;;;1156:34;;;1186:1;1183;1176:12;1156:34;1224:6;1213:9;1209:22;1199:32;;1269:7;1262:4;1258:2;1254:13;1250:27;1240:55;;1291:1;1288;1281:12;1240:55;1331:2;1318:16;1357:2;1349:6;1346:14;1343:34;;;1373:1;1370;1363:12;1343:34;1418:7;1413:2;1404:6;1400:2;1396:15;1392:24;1389:37;1386:57;;;1439:1;1436;1429:12;1386:57;594:961;;;;-1:-1:-1;;1470:2:126;1462:11;;1545:2;1530:18;1517:32;;594:961;-1:-1:-1;;;594:961:126:o;1992:184::-;2062:6;2115:2;2103:9;2094:7;2090:23;2086:32;2083:52;;;2131:1;2128;2121:12;2083:52;-1:-1:-1;2154:16:126;;1992:184;-1:-1:-1;1992:184:126:o;3233:331::-;3338:9;3349;3391:8;3379:10;3376:24;3373:44;;;3413:1;3410;3403:12;3373:44;3442:6;3432:8;3429:20;3426:40;;;3462:1;3459;3452:12;3426:40;-1:-1:-1;;3488:23:126;;;3533:25;;;;;-1:-1:-1;3233:331:126:o;3569:323::-;-1:-1:-1;;;;;;3689:19:126;;3765:11;;;;3796:1;3788:10;;3785:101;;;3873:2;3867;3860:3;3857:1;3853:11;3850:1;3846:19;3842:28;3838:2;3834:37;3830:46;3821:55;;3785:101;;;3569:323;;;;:::o;4592:127::-;4653:10;4648:3;4644:20;4641:1;4634:31;4684:4;4681:1;4674:15;4708:4;4705:1;4698:15;4724:138;4803:13;;4825:31;4803:13;4825:31;:::i;:::-;4724:138;;;:::o;4867:1129::-;4962:6;4993:2;5036;5024:9;5015:7;5011:23;5007:32;5004:52;;;5052:1;5049;5042:12;5004:52;5085:9;5079:16;5114:18;5155:2;5147:6;5144:14;5141:34;;;5171:1;5168;5161:12;5141:34;5209:6;5198:9;5194:22;5184:32;;5254:7;5247:4;5243:2;5239:13;5235:27;5225:55;;5276:1;5273;5266:12;5225:55;5305:2;5299:9;5327:2;5323;5320:10;5317:36;;;5333:18;;:::i;:::-;5379:2;5376:1;5372:10;5411:2;5405:9;5474:2;5470:7;5465:2;5461;5457:11;5453:25;5445:6;5441:38;5529:6;5517:10;5514:22;5509:2;5497:10;5494:18;5491:46;5488:72;;;5540:18;;:::i;:::-;5576:2;5569:22;5626:18;;;5660:15;;;;-1:-1:-1;5702:11:126;;;5698:20;;;5730:19;;;5727:39;;;5762:1;5759;5752:12;5727:39;5786:11;;;;5806:159;5822:6;5817:3;5814:15;5806:159;;;5888:34;5918:3;5888:34;:::i;:::-;5876:47;;5839:12;;;;5943;;;;5806:159;;;5984:6;4867:1129;-1:-1:-1;;;;;;;;4867:1129:126:o;6354:127::-;6415:10;6410:3;6406:20;6403:1;6396:31;6446:4;6443:1;6436:15;6470:4;6467:1;6460:15;7180:277;7247:6;7300:2;7288:9;7279:7;7275:23;7271:32;7268:52;;;7316:1;7313;7306:12;7268:52;7348:9;7342:16;7401:5;7394:13;7387:21;7380:5;7377:32;7367:60;;7423:1;7420;7413:12",
    "linkReferences": {},
    "immutableReferences": {
      "36786": [
        {
          "start": 354,
          "length": 32
        },
        {
          "start": 830,
          "length": 32
        }
      ],
      "36788": [
        {
          "start": 393,
          "length": 32
        },
        {
          "start": 726,
          "length": 32
        }
      ],
      "36791": [
        {
          "start": 451,
          "length": 32
        },
        {
          "start": 516,
          "length": 32
        },
        {
          "start": 1782,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addBeneficiary(address)": "5926651d",
    "beneficiaries(address)": "01567739",
    "masterCopy()": "a619486e",
    "owner()": "8da5cb5b",
    "proxyCreated(address,address,bytes,uint256)": "1e52b518",
    "renounceOwnership()": "715018a6",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "walletFactory()": "c5c03699",
    "wallets(address)": "89b08f11"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterCopyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"initialBeneficiaries\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proxyCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The registry has embedded verifications to ensure only legitimate Gnosis Safe wallets are stored.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"proxyCreated(address,address,bytes,uint256)\":{\"notice\":\"Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback setting the registry's address as the callback.\"}},\"notice\":\"A registry for Gnosis Safe wallets. When known beneficiaries deploy and register their wallets, the registry sends some Defi Ctf Tokens to the wallet.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/src-default/safeRegistry/SafeRegistry.sol\":\"SafeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@safe/=lib/safe-contracts/\",\":@uniswapv2/=src/src-0_6_x/uniswapv2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/safe-contracts/contracts/GnosisSafe.sol\":{\"keccak256\":\"0x08a8750ac2e42bdab1d7483ccc698b019a2b448b5296db2b0ecc5d318b2fe763\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://67ff79afa7060d3a18b25c6ad6420dcbee6b6f788e2afe937c91ab4d64e3ce27\",\"dweb:/ipfs/QmVtN8xjT7eoieeDfCiTstaja9n9KBG7qYdD9gfSDfrCg8\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://71ada0590998f47d1ee9759aa190c82d4b348d59a2f582747650d9720245a309\",\"dweb:/ipfs/Qmb9UudLoJpPutHVP9pXd1poP5CqFf5sxVFuYw14SYfRFk\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x1a6d2eab5094e4219408e502a47d560a09e0fdd9f947440e6708ea024741bc6a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ea9bd1225c38a9f1383a9f2aa613d9b493bb7e851a01164e312b63cecc4dd3b3\",\"dweb:/ipfs/Qma4UN216kpt8Nn6MkqUFRNeyZEsuXqQcuPfj2wfQdRzxW\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0x7496e28d7fb5b729f68f95db2ec9c54352ade263d51a3dcc7d2ac13edcae5508\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://31618b7dcfe9d67c21f0d68b5fb82f794461177ac19290f2c4dd7ebf1c2e8d75\",\"dweb:/ipfs/QmcQMfK7q56bJwNN3WmjmX6YV5CxDZ5UPXRXfTeJiPHnys\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://763cf803a98a921d62ed51d7876a13aed63968c828f026ce2beb747d2631c0bc\",\"dweb:/ipfs/QmbHZoYsbkxC2kVCs4pQ4nRaFrcgU5X8FuLX7vV3qDR9Y5\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://91824103f2966612103705d6493290e193b0c0ca2bbe7141965184435dbb999b\",\"dweb:/ipfs/Qmd7u917v4DnD4hvQGAGbchVJ8A7pm1UCzCv7sAzQnRoi4\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d\",\"dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej\"]},\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830\",\"dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://2ae8a6d5c7d4cc19c3b957c8857e87e92a4570effebf32ba54184c2b8375a0a2\",\"dweb:/ipfs/QmVNgRcRVgQZriJm8KVXQvRbHQf74wH7ABmBNTjBTqBa8r\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29\",\"dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0xb3e2e3b9d17c47201414341d2ccfc6437bc09f31af6dddf4a7de1f6294543072\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0ee25eaebfd78a167949dcef64e1425b257311211cba8ec2fc1b6216edf1bcbe\",\"dweb:/ipfs/QmYL4uXE8wqdv7YCkHQSTWAsjco1pi8sJbDASuodDmNCpt\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ce1dfe9f820352b6f95b350ac0b3fa8afc24ad77bffffc2c9e00462e2a41a666\",\"dweb:/ipfs/QmVr2dCUbNbg5e7UsgngGij5mybgkXcbf5e5cPhT21aFXA\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x40a5f239d9639d4e44cb195a8a2a0022bb27840e282990e6776d8581515ca7ed\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://22fa3b633e76e7d58736c841730a05f2c37a09f612e7e90dfd6c1f35722a9157\",\"dweb:/ipfs/QmTFhMtHEKkdzQdVN9gayKdEJY69HWoM7abW2dXEuWXF6i\"]},\"lib/safe-contracts/contracts/external/GnosisSafeMath.sol\":{\"keccak256\":\"0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ea04449ba8b78ec44f3463b68cbce971875626e91d028add50900c41101a1156\",\"dweb:/ipfs/QmR95ci4HVkJuyYGvYRHVpp6N3wefu5WVDhipKwRechWV6\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://46a7796e0c5c451b86038253d488ffb0986472d17d0fb74e00c3809682f2fd7a\",\"dweb:/ipfs/QmX7tYoCRrCLGqsZSHXgdcqbRhMGXpS6ezckaFjaiULd3e\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bfdde8390deb619e38f98be67c5f9d26f12623855540af76b9f454142d3896c1\",\"dweb:/ipfs/QmZrr1ocToR5S62W177qV2csfs7wCQNs3t9vatyx32uLXz\"]},\"lib/safe-contracts/contracts/proxies/GnosisSafeProxy.sol\":{\"keccak256\":\"0x3bfdd453d9f896f7029d15bcafd11886957b320ad1764309d9f74fa059715249\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5b5b7d0c8a900ba758e012236bf1c55e885fe5716aa79f6f693d22c31c85f7d5\",\"dweb:/ipfs/QmUq5oNsZY1b5pcYAzrY1i9oqyPUaiFhLaEWgB9ML6LrBj\"]},\"lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0x51a9ce914a6a943651c803541e44218a7ed0a2f98a94d55df66b173b5a11e365\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5216ed8181c14d462ec821593c8f90f33c7dbe8b4c505a1092bf31a9d33132b9\",\"dweb:/ipfs/Qmbb2wkgijuTcEbGR7CnmiAtwZDyruQ2b1ged4HnLysQnT\"]},\"src/src-default/safeRegistry/SafeRegistry.sol\":{\"keccak256\":\"0x6b5451ff458a726fbe5211b8d3c5c5d5f50916ec8312f2615cc880d6645d52e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ea31cbcc7bff6a28e701d2e2c444c65d846019200ca2dbe3e4a3967d00087a5\",\"dweb:/ipfs/QmQN4mDp3B7rBByUxzjKfDE2rcuTVHnkwqZk3smhkmbG3u\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "masterCopyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "walletFactoryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "initialBeneficiaries",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBeneficiary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beneficiaries",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "masterCopy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract GnosisSafeProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "singleton",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initializer",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proxyCreated"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "walletFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "wallets",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "proxyCreated(address,address,bytes,uint256)": {
            "notice": "Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback setting the registry's address as the callback."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@safe/=lib/safe-contracts/",
        ":@uniswapv2/=src/src-0_6_x/uniswapv2/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":safe-contracts/=lib/safe-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/src-default/safeRegistry/SafeRegistry.sol": "SafeRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/GnosisSafe.sol": {
        "keccak256": "0x08a8750ac2e42bdab1d7483ccc698b019a2b448b5296db2b0ecc5d318b2fe763",
        "urls": [
          "bzz-raw://67ff79afa7060d3a18b25c6ad6420dcbee6b6f788e2afe937c91ab4d64e3ce27",
          "dweb:/ipfs/QmVtN8xjT7eoieeDfCiTstaja9n9KBG7qYdD9gfSDfrCg8"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0x4d3a900673473466bc27413fdbb11aae60b5580b792c49411f01544e0b24fe08",
        "urls": [
          "bzz-raw://71ada0590998f47d1ee9759aa190c82d4b348d59a2f582747650d9720245a309",
          "dweb:/ipfs/Qmb9UudLoJpPutHVP9pXd1poP5CqFf5sxVFuYw14SYfRFk"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x1a6d2eab5094e4219408e502a47d560a09e0fdd9f947440e6708ea024741bc6a",
        "urls": [
          "bzz-raw://ea9bd1225c38a9f1383a9f2aa613d9b493bb7e851a01164e312b63cecc4dd3b3",
          "dweb:/ipfs/Qma4UN216kpt8Nn6MkqUFRNeyZEsuXqQcuPfj2wfQdRzxW"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0x7496e28d7fb5b729f68f95db2ec9c54352ade263d51a3dcc7d2ac13edcae5508",
        "urls": [
          "bzz-raw://31618b7dcfe9d67c21f0d68b5fb82f794461177ac19290f2c4dd7ebf1c2e8d75",
          "dweb:/ipfs/QmcQMfK7q56bJwNN3WmjmX6YV5CxDZ5UPXRXfTeJiPHnys"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0x5512760a0328309f82a71cbe2ac14e0942501b9d44d5fb417bd02174546672e5",
        "urls": [
          "bzz-raw://763cf803a98a921d62ed51d7876a13aed63968c828f026ce2beb747d2631c0bc",
          "dweb:/ipfs/QmbHZoYsbkxC2kVCs4pQ4nRaFrcgU5X8FuLX7vV3qDR9Y5"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0x01a3d64cc0967f42ae63802409f5404d18352516ea2a6335005003d919ffcf12",
        "urls": [
          "bzz-raw://91824103f2966612103705d6493290e193b0c0ca2bbe7141965184435dbb999b",
          "dweb:/ipfs/Qmd7u917v4DnD4hvQGAGbchVJ8A7pm1UCzCv7sAzQnRoi4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x473e45b1a5cc47be494b0e123c9127f0c11c1e0992a321ae5a644c0bfdb2c14f",
        "urls": [
          "bzz-raw://948e6d5a8bd7377f7795b6e28584eab9be5c0a8db240bf5e606744a175238c3d",
          "dweb:/ipfs/QmQQaUmQfpuejV41jbxKSTgEBYYCcVTjCsDMgf2htgz6ej"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/EtherPaymentFallback.sol": {
        "keccak256": "0x1a7928d29877da84a3d0df846d5cd933d48ee095c1bde0aa044e249b12e27a72",
        "urls": [
          "bzz-raw://962fc098cfdd8a43cc7d294c1105718ea985cacf1172ea0426f7370e2096b830",
          "dweb:/ipfs/QmdZrxJ7dSWuTjbrN133YiRDLwYQr21zLr3CqWWtowY9Gu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x178682d8477da42936c7e8e24d39094c4ac08ecd8623794b9535d77001b665f1",
        "urls": [
          "bzz-raw://2ae8a6d5c7d4cc19c3b957c8857e87e92a4570effebf32ba54184c2b8375a0a2",
          "dweb:/ipfs/QmVNgRcRVgQZriJm8KVXQvRbHQf74wH7ABmBNTjBTqBa8r"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0x59d36efca578b75541a776f62a0d0ef03712fc27b6647c3915c14b572106d7bc",
        "urls": [
          "bzz-raw://8530c6e0392415d42486847cd4368d30f6cac42051596330692a571fcdbb9e29",
          "dweb:/ipfs/QmWw51Pshw5t2sMKANzxtfNdBSQUyQQpfTr3Mi7oNJGk7U"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0xb3e2e3b9d17c47201414341d2ccfc6437bc09f31af6dddf4a7de1f6294543072",
        "urls": [
          "bzz-raw://0ee25eaebfd78a167949dcef64e1425b257311211cba8ec2fc1b6216edf1bcbe",
          "dweb:/ipfs/QmYL4uXE8wqdv7YCkHQSTWAsjco1pi8sJbDASuodDmNCpt"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0x6e02c18998de8834dd7d69890cb6ede996b6f635d2337081a596d91e35e2c648",
        "urls": [
          "bzz-raw://ce1dfe9f820352b6f95b350ac0b3fa8afc24ad77bffffc2c9e00462e2a41a666",
          "dweb:/ipfs/QmVr2dCUbNbg5e7UsgngGij5mybgkXcbf5e5cPhT21aFXA"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x40a5f239d9639d4e44cb195a8a2a0022bb27840e282990e6776d8581515ca7ed",
        "urls": [
          "bzz-raw://22fa3b633e76e7d58736c841730a05f2c37a09f612e7e90dfd6c1f35722a9157",
          "dweb:/ipfs/QmTFhMtHEKkdzQdVN9gayKdEJY69HWoM7abW2dXEuWXF6i"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/GnosisSafeMath.sol": {
        "keccak256": "0x2a2b4d74f5834a9437be0cd3254d7a676698fc78aa47941c2009470196998d98",
        "urls": [
          "bzz-raw://ea04449ba8b78ec44f3463b68cbce971875626e91d028add50900c41101a1156",
          "dweb:/ipfs/QmR95ci4HVkJuyYGvYRHVpp6N3wefu5WVDhipKwRechWV6"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x5c64c2e071245db8fe3ea8b94f73c5a8de236933858ae240348d502433a9d178",
        "urls": [
          "bzz-raw://46a7796e0c5c451b86038253d488ffb0986472d17d0fb74e00c3809682f2fd7a",
          "dweb:/ipfs/QmX7tYoCRrCLGqsZSHXgdcqbRhMGXpS6ezckaFjaiULd3e"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x5b6e9bf17f28738ce88e751f420b0559f5151ba7bec2ff3c7bb31e42673d6801",
        "urls": [
          "bzz-raw://bfdde8390deb619e38f98be67c5f9d26f12623855540af76b9f454142d3896c1",
          "dweb:/ipfs/QmZrr1ocToR5S62W177qV2csfs7wCQNs3t9vatyx32uLXz"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": {
        "keccak256": "0x3bfdd453d9f896f7029d15bcafd11886957b320ad1764309d9f74fa059715249",
        "urls": [
          "bzz-raw://5b5b7d0c8a900ba758e012236bf1c55e885fe5716aa79f6f693d22c31c85f7d5",
          "dweb:/ipfs/QmUq5oNsZY1b5pcYAzrY1i9oqyPUaiFhLaEWgB9ML6LrBj"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol": {
        "keccak256": "0x51a9ce914a6a943651c803541e44218a7ed0a2f98a94d55df66b173b5a11e365",
        "urls": [
          "bzz-raw://5216ed8181c14d462ec821593c8f90f33c7dbe8b4c505a1092bf31a9d33132b9",
          "dweb:/ipfs/Qmbb2wkgijuTcEbGR7CnmiAtwZDyruQ2b1ged4HnLysQnT"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/src-default/safeRegistry/SafeRegistry.sol": {
        "keccak256": "0x6b5451ff458a726fbe5211b8d3c5c5d5f50916ec8312f2615cc880d6645d52e2",
        "urls": [
          "bzz-raw://3ea31cbcc7bff6a28e701d2e2c444c65d846019200ca2dbe3e4a3967d00087a5",
          "dweb:/ipfs/QmQN4mDp3B7rBByUxzjKfDE2rcuTVHnkwqZk3smhkmbG3u"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/src-default/safeRegistry/SafeRegistry.sol",
    "id": 37012,
    "exportedSymbols": {
      "BaseGuard": [
        32590
      ],
      "Context": [
        29664
      ],
      "Enum": [
        33536
      ],
      "EtherPaymentFallback": [
        33558
      ],
      "Executor": [
        32472
      ],
      "FallbackManager": [
        32523
      ],
      "GnosisSafe": [
        32440
      ],
      "GnosisSafeMath": [
        33792
      ],
      "GnosisSafeProxy": [
        33863
      ],
      "Guard": [
        32564
      ],
      "GuardManager": [
        32651
      ],
      "IERC165": [
        33804
      ],
      "IERC20": [
        27667
      ],
      "IProxy": [
        33832
      ],
      "IProxyCreationCallback": [
        34126
      ],
      "ISignatureValidator": [
        33823
      ],
      "ISignatureValidatorConstants": [
        33810
      ],
      "ModuleManager": [
        33018
      ],
      "Ownable": [
        26510
      ],
      "OwnerManager": [
        33529
      ],
      "SafeRegistry": [
        37011
      ],
      "SecuredTokenTransfer": [
        33585
      ],
      "SelfAuthorized": [
        33611
      ],
      "SignatureDecoder": [
        33631
      ],
      "Singleton": [
        33637
      ],
      "StorageAccessible": [
        33686
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3584:92",
    "nodes": [
      {
        "id": 36766,
        "nodeType": "PragmaDirective",
        "src": "33:23:92",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 36767,
        "nodeType": "ImportDirective",
        "src": "60:52:92",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37012,
        "sourceUnit": 26511,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36768,
        "nodeType": "ImportDirective",
        "src": "114:56:92",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37012,
        "sourceUnit": 27668,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36769,
        "nodeType": "ImportDirective",
        "src": "172:40:92",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/GnosisSafe.sol",
        "file": "@safe/contracts/GnosisSafe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37012,
        "sourceUnit": 32441,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36770,
        "nodeType": "ImportDirective",
        "src": "214:60:92",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol",
        "file": "@safe/contracts/proxies/IProxyCreationCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 37012,
        "sourceUnit": 34127,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37011,
        "nodeType": "ContractDefinition",
        "src": "570:3045:92",
        "nodes": [
          {
            "id": 36778,
            "nodeType": "VariableDeclaration",
            "src": "640:39:92",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_OWNERS",
            "nameLocation": "665:10:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36776,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "640:7:92",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 36777,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "678:1:92",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 36781,
            "nodeType": "VariableDeclaration",
            "src": "686:42:92",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_THRESHOLD",
            "nameLocation": "711:13:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36779,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:92",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 36780,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:1:92",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 36784,
            "nodeType": "VariableDeclaration",
            "src": "735:49:92",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "TOKEN_PAYMENT",
            "nameLocation": "760:13:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36782,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "735:7:92",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 36783,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "776:8:92",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000"
              },
              "value": "10"
            },
            "visibility": "private"
          },
          {
            "id": 36786,
            "nodeType": "VariableDeclaration",
            "src": "814:35:92",
            "nodes": [],
            "constant": false,
            "functionSelector": "a619486e",
            "mutability": "immutable",
            "name": "masterCopy",
            "nameLocation": "839:10:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36785,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "814:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 36788,
            "nodeType": "VariableDeclaration",
            "src": "856:38:92",
            "nodes": [],
            "constant": false,
            "functionSelector": "c5c03699",
            "mutability": "immutable",
            "name": "walletFactory",
            "nameLocation": "881:13:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36787,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 36791,
            "nodeType": "VariableDeclaration",
            "src": "901:29:92",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "925:5:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$27667",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 36790,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36789,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27667,
                "src": "901:6:92"
              },
              "referencedDeclaration": 27667,
              "src": "901:6:92",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$27667",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 36795,
            "nodeType": "VariableDeclaration",
            "src": "939:46:92",
            "nodes": [],
            "constant": false,
            "functionSelector": "01567739",
            "mutability": "mutable",
            "name": "beneficiaries",
            "nameLocation": "972:13:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 36794,
              "keyType": {
                "id": 36792,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "948:7:92",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "939:25:92",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 36793,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "959:4:92",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 36799,
            "nodeType": "VariableDeclaration",
            "src": "1018:43:92",
            "nodes": [],
            "constant": false,
            "functionSelector": "89b08f11",
            "mutability": "mutable",
            "name": "wallets",
            "nameLocation": "1054:7:92",
            "scope": 37011,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 36798,
              "keyType": {
                "id": 36796,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:92",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1018:28:92",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 36797,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1038:7:92",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 36863,
            "nodeType": "FunctionDefinition",
            "src": "1070:552:92",
            "nodes": [],
            "body": {
              "id": 36862,
              "nodeType": "Block",
              "src": "1244:378:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36812,
                          "name": "masterCopyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36801,
                          "src": "1263:17:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1292:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1284:7:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36813,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1284:7:92",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1284:10:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1263:31:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 36811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1255:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 36818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:40:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36819,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36821,
                          "name": "walletFactoryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36803,
                          "src": "1314:20:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1346:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1338:7:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36822,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1338:7:92",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1338:10:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1314:34:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 36820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1306:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 36827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36828,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:43:92"
                },
                {
                  "expression": {
                    "id": 36831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36829,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36786,
                      "src": "1362:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36830,
                      "name": "masterCopyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36801,
                      "src": "1375:17:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1362:30:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36832,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:30:92"
                },
                {
                  "expression": {
                    "id": 36835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36833,
                      "name": "walletFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36788,
                      "src": "1403:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36834,
                      "name": "walletFactoryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36803,
                      "src": "1419:20:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1403:36:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36836,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:36:92"
                },
                {
                  "expression": {
                    "id": 36841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36837,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36791,
                      "src": "1450:5:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27667",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36839,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36805,
                          "src": "1465:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36838,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27667,
                        "src": "1458:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27667_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 36840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1458:20:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27667",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1450:28:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27667",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 36842,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:28:92"
                },
                {
                  "body": {
                    "id": 36860,
                    "nodeType": "Block",
                    "src": "1549:66:92",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 36855,
                                "name": "initialBeneficiaries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36808,
                                "src": "1579:20:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 36857,
                              "indexExpression": {
                                "id": 36856,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36844,
                                "src": "1600:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1579:23:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36854,
                            "name": "addBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36877,
                            "src": "1564:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 36858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1564:39:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36859,
                        "nodeType": "ExpressionStatement",
                        "src": "1564:39:92"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 36850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36847,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36844,
                      "src": "1511:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 36848,
                        "name": "initialBeneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36808,
                        "src": "1515:20:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 36849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1515:27:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1511:31:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36861,
                  "initializationExpression": {
                    "assignments": [
                      36844
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 36844,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1504:1:92",
                        "nodeType": "VariableDeclaration",
                        "scope": 36861,
                        "src": "1496:9:92",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 36843,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 36846,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 36845,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1508:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1496:13:92"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 36852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1544:3:92",
                      "subExpression": {
                        "id": 36851,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36844,
                        "src": "1544:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 36853,
                    "nodeType": "ExpressionStatement",
                    "src": "1544:3:92"
                  },
                  "nodeType": "ForStatement",
                  "src": "1491:124:92"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36801,
                  "mutability": "mutable",
                  "name": "masterCopyAddress",
                  "nameLocation": "1100:17:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 36863,
                  "src": "1092:25:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36800,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36803,
                  "mutability": "mutable",
                  "name": "walletFactoryAddress",
                  "nameLocation": "1136:20:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 36863,
                  "src": "1128:28:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36805,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1176:12:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 36863,
                  "src": "1168:20:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36808,
                  "mutability": "mutable",
                  "name": "initialBeneficiaries",
                  "nameLocation": "1216:20:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 36863,
                  "src": "1199:37:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36806,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1199:7:92",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36807,
                    "nodeType": "ArrayTypeName",
                    "src": "1199:9:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:162:92"
            },
            "returnParameters": {
              "id": 36810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:0:92"
            },
            "scope": 37011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36877,
            "nodeType": "FunctionDefinition",
            "src": "1630:114:92",
            "nodes": [],
            "body": {
              "id": 36876,
              "nodeType": "Block",
              "src": "1692:52:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36870,
                        "name": "beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36795,
                        "src": "1703:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 36872,
                      "indexExpression": {
                        "id": 36871,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36865,
                        "src": "1717:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1703:26:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 36873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1732:4:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1703:33:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36875,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:33:92"
                }
              ]
            },
            "functionSelector": "5926651d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36868,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36867,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26429,
                  "src": "1682:9:92"
                },
                "nodeType": "ModifierInvocation",
                "src": "1682:9:92"
              }
            ],
            "name": "addBeneficiary",
            "nameLocation": "1639:14:92",
            "parameters": {
              "id": 36866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36865,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1662:11:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 36877,
                  "src": "1654:19:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1653:21:92"
            },
            "returnParameters": {
              "id": 36869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:0:92"
            },
            "scope": 37011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36889,
            "nodeType": "FunctionDefinition",
            "src": "1752:110:92",
            "nodes": [],
            "body": {
              "id": 36888,
              "nodeType": "Block",
              "src": "1809:53:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36882,
                        "name": "beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36795,
                        "src": "1820:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 36884,
                      "indexExpression": {
                        "id": 36883,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36879,
                        "src": "1834:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1820:26:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 36885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1849:5:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1820:34:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36887,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:34:92"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeBeneficiary",
            "nameLocation": "1761:18:92",
            "parameters": {
              "id": 36880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36879,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1788:11:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 36889,
                  "src": "1780:19:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:21:92"
            },
            "returnParameters": {
              "id": 36881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:0:92"
            },
            "scope": 37011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 37010,
            "nodeType": "FunctionDefinition",
            "src": "2073:1539:92",
            "nodes": [],
            "body": {
              "id": 37009,
              "nodeType": "Block",
              "src": "2235:1377:92",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 36908,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2326:4:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeRegistry_$37011",
                                    "typeString": "contract SafeRegistry"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeRegistry_$37011",
                                    "typeString": "contract SafeRegistry"
                                  }
                                ],
                                "id": 36907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2318:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 36906,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2318:7:92",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 36909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2318:13:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 36904,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36791,
                              "src": "2302:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27667",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 36905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27624,
                            "src": "2302:15:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 36910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:30:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 36911,
                          "name": "TOKEN_PAYMENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36784,
                          "src": "2336:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2302:47:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f20706179",
                        "id": 36913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2351:25:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7eb44b905fa0f09de78f0c019ef53f9c258c37eb27b2b50c18888808084a464",
                          "typeString": "literal_string \"Not enough funds to pay\""
                        },
                        "value": "Not enough funds to pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7eb44b905fa0f09de78f0c019ef53f9c258c37eb27b2b50c18888808084a464",
                          "typeString": "literal_string \"Not enough funds to pay\""
                        }
                      ],
                      "id": 36903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2294:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:83:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36915,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:83:92"
                },
                {
                  "assignments": [
                    36917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36917,
                      "mutability": "mutable",
                      "name": "walletAddress",
                      "nameLocation": "2406:13:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 37009,
                      "src": "2390:29:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 36916,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2390:15:92",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36922,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36920,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36893,
                        "src": "2430:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                          "typeString": "contract GnosisSafeProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                          "typeString": "contract GnosisSafeProxy"
                        }
                      ],
                      "id": 36919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2422:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 36918,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2422:8:92",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 36921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:14:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2390:46:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 36924,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2508:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2508:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36926,
                          "name": "walletFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36788,
                          "src": "2522:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2508:27:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d75737420626520666163746f7279",
                        "id": 36928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2537:24:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97c12ab8dae2b6e3423b1ff7818ef5070ca5a3d084f084a0ac8ed4219990db9d",
                          "typeString": "literal_string \"Caller must be factory\""
                        },
                        "value": "Caller must be factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97c12ab8dae2b6e3423b1ff7818ef5070ca5a3d084f084a0ac8ed4219990db9d",
                          "typeString": "literal_string \"Caller must be factory\""
                        }
                      ],
                      "id": 36923,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2500:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:62:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36930,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:62:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36932,
                          "name": "singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36895,
                          "src": "2581:9:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36933,
                          "name": "masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36786,
                          "src": "2594:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2581:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46616b65206d6173746572636f70792075736564",
                        "id": 36935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2606:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83826d6b88f2c000c04fb2c3c950d88d1ee6f78ad0dbd54df1c9b39527548fe2",
                          "typeString": "literal_string \"Fake mastercopy used\""
                        },
                        "value": "Fake mastercopy used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83826d6b88f2c000c04fb2c3c950d88d1ee6f78ad0dbd54df1c9b39527548fe2",
                          "typeString": "literal_string \"Fake mastercopy used\""
                        }
                      ],
                      "id": 36931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2573:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2573:56:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36937,
                  "nodeType": "ExpressionStatement",
                  "src": "2573:56:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 36948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 36941,
                                "name": "initializer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36897,
                                "src": "2735:11:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "endExpression": {
                                "hexValue": "34",
                                "id": 36942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2748:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "id": 36943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexRangeAccess",
                              "src": "2735:15:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                "typeString": "bytes calldata slice"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                "typeString": "bytes calldata slice"
                              }
                            ],
                            "id": 36940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2728:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes4_$",
                              "typeString": "type(bytes4)"
                            },
                            "typeName": {
                              "id": 36939,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "2728:6:92",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 36945,
                              "name": "GnosisSafe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32440,
                              "src": "2755:10:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                                "typeString": "type(contract GnosisSafe)"
                              }
                            },
                            "id": 36946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "setup",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31655,
                            "src": "2755:16:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_bytes_calldata_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_payable_$returns$__$",
                              "typeString": "function GnosisSafe.setup(address[] calldata,uint256,address,bytes calldata,address,address,uint256,address payable)"
                            }
                          },
                          "id": 36947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "2755:25:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2728:52:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720696e697469616c697a6174696f6e",
                        "id": 36949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:22:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_610b6ee8792bcbd445b3479ab1729bc7a603b84d32d0a07ab8538b84833f4969",
                          "typeString": "literal_string \"Wrong initialization\""
                        },
                        "value": "Wrong initialization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_610b6ee8792bcbd445b3479ab1729bc7a603b84d32d0a07ab8538b84833f4969",
                          "typeString": "literal_string \"Wrong initialization\""
                        }
                      ],
                      "id": 36938,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2720:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:85:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36951,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:85:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 36954,
                                  "name": "walletAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36917,
                                  "src": "2894:13:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 36953,
                                "name": "GnosisSafe",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32440,
                                "src": "2883:10:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                                  "typeString": "type(contract GnosisSafe)"
                                }
                              },
                              "id": 36955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2883:25:92",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GnosisSafe_$32440",
                                "typeString": "contract GnosisSafe"
                              }
                            },
                            "id": 36956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getThreshold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33456,
                            "src": "2883:38:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 36957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2883:40:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36958,
                          "name": "MAX_THRESHOLD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36781,
                          "src": "2927:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2883:57:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207468726573686f6c64",
                        "id": 36960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:19:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ff97c68cc1ac5ac02627bc56a7952ed013c289f74b6ec864fdb7b550327a4a9",
                          "typeString": "literal_string \"Invalid threshold\""
                        },
                        "value": "Invalid threshold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ff97c68cc1ac5ac02627bc56a7952ed013c289f74b6ec864fdb7b550327a4a9",
                          "typeString": "literal_string \"Invalid threshold\""
                        }
                      ],
                      "id": 36952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2875:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:87:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36962,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:87:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 36965,
                                    "name": "walletAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36917,
                                    "src": "2992:13:92",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 36964,
                                  "name": "GnosisSafe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32440,
                                  "src": "2981:10:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                                    "typeString": "type(contract GnosisSafe)"
                                  }
                                },
                                "id": 36966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2981:25:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GnosisSafe_$32440",
                                  "typeString": "contract GnosisSafe"
                                }
                              },
                              "id": 36967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getOwners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33528,
                              "src": "2981:35:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function () view external returns (address[] memory)"
                              }
                            },
                            "id": 36968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2981:37:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 36969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2981:44:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36970,
                          "name": "MAX_OWNERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36778,
                          "src": "3029:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2981:58:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e756d626572206f66206f776e657273",
                        "id": 36972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3041:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2eb55daffdd0fab02c96aaebfea9eee4ce0f9094f6caa536047712aae775b261",
                          "typeString": "literal_string \"Invalid number of owners\""
                        },
                        "value": "Invalid number of owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2eb55daffdd0fab02c96aaebfea9eee4ce0f9094f6caa536047712aae775b261",
                          "typeString": "literal_string \"Invalid number of owners\""
                        }
                      ],
                      "id": 36963,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2973:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:95:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36974,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:95:92"
                },
                {
                  "assignments": [
                    36976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36976,
                      "mutability": "mutable",
                      "name": "walletOwner",
                      "nameLocation": "3153:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 37009,
                      "src": "3145:19:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36975,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3145:7:92",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36984,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 36978,
                              "name": "walletAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36917,
                              "src": "3178:13:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 36977,
                            "name": "GnosisSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32440,
                            "src": "3167:10:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                              "typeString": "type(contract GnosisSafe)"
                            }
                          },
                          "id": 36979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3167:25:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GnosisSafe_$32440",
                            "typeString": "contract GnosisSafe"
                          }
                        },
                        "id": 36980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getOwners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33528,
                        "src": "3167:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (address[] memory)"
                        }
                      },
                      "id": 36981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3167:37:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 36983,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 36982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3205:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3167:40:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3145:62:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 36986,
                          "name": "beneficiaries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36795,
                          "src": "3228:13:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 36988,
                        "indexExpression": {
                          "id": 36987,
                          "name": "walletOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36976,
                          "src": "3242:11:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3228:26:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572206973206e6f7420726567697374657265642061732062656e6566696369617279",
                        "id": 36989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:40:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c004dcecfabc7e4f0d285562b80f9ff8036c7b0b5e656a0285b8c1a09c1ba0ca",
                          "typeString": "literal_string \"Owner is not registered as beneficiary\""
                        },
                        "value": "Owner is not registered as beneficiary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c004dcecfabc7e4f0d285562b80f9ff8036c7b0b5e656a0285b8c1a09c1ba0ca",
                          "typeString": "literal_string \"Owner is not registered as beneficiary\""
                        }
                      ],
                      "id": 36985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3220:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:77:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36991,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:77:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36993,
                        "name": "walletOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36976,
                        "src": "3369:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36992,
                      "name": "_removeBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36889,
                      "src": "3350:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 36994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:31:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36995,
                  "nodeType": "ExpressionStatement",
                  "src": "3350:31:92"
                },
                {
                  "expression": {
                    "id": 37000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36996,
                        "name": "wallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36799,
                        "src": "3452:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 36998,
                      "indexExpression": {
                        "id": 36997,
                        "name": "walletOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36976,
                        "src": "3460:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3452:20:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36999,
                      "name": "walletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36917,
                      "src": "3475:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3452:36:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 37001,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:36:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37005,
                        "name": "walletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36917,
                        "src": "3567:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 37006,
                        "name": "TOKEN_PAYMENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36784,
                        "src": "3582:13:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 37002,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36791,
                        "src": "3552:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27667",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 37004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27634,
                      "src": "3552:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 37007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:44:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 37008,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:44:92"
                }
              ]
            },
            "baseFunctions": [
              34125
            ],
            "documentation": {
              "id": 36890,
              "nodeType": "StructuredDocumentation",
              "src": "1870:197:92",
              "text": "@notice Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback\nsetting the registry's address as the callback."
            },
            "functionSelector": "1e52b518",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxyCreated",
            "nameLocation": "2082:12:92",
            "overrides": {
              "id": 36901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2226:8:92"
            },
            "parameters": {
              "id": 36900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36893,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "2121:5:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 37010,
                  "src": "2105:21:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                    "typeString": "contract GnosisSafeProxy"
                  },
                  "typeName": {
                    "id": 36892,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36891,
                      "name": "GnosisSafeProxy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33863,
                      "src": "2105:15:92"
                    },
                    "referencedDeclaration": 33863,
                    "src": "2105:15:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                      "typeString": "contract GnosisSafeProxy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36895,
                  "mutability": "mutable",
                  "name": "singleton",
                  "nameLocation": "2145:9:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 37010,
                  "src": "2137:17:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36897,
                  "mutability": "mutable",
                  "name": "initializer",
                  "nameLocation": "2180:11:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 37010,
                  "src": "2165:26:92",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 36896,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:5:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36899,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 37010,
                  "src": "2202:7:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:122:92"
            },
            "returnParameters": {
              "id": 36902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2235:0:92"
            },
            "scope": 37011,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36772,
              "name": "IProxyCreationCallback",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34126,
              "src": "595:22:92"
            },
            "id": 36773,
            "nodeType": "InheritanceSpecifier",
            "src": "595:22:92"
          },
          {
            "baseName": {
              "id": 36774,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26510,
              "src": "619:7:92"
            },
            "id": 36775,
            "nodeType": "InheritanceSpecifier",
            "src": "619:7:92"
          }
        ],
        "canonicalName": "SafeRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36771,
          "nodeType": "StructuredDocumentation",
          "src": "278:290:92",
          "text": " @notice A registry for Gnosis Safe wallets.\nWhen known beneficiaries deploy and register their wallets, the registry sends some Defi Ctf Tokens to the wallet.\n @dev The registry has embedded verifications to ensure only legitimate Gnosis Safe wallets are stored."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          37011,
          26510,
          29664,
          34126
        ],
        "name": "SafeRegistry",
        "nameLocation": "579:12:92",
        "scope": 37012,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 92
}