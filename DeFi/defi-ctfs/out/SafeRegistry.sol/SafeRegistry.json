{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "masterCopyAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "walletFactoryAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "initialBeneficiaries",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "addBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "beneficiaries",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "masterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract GnosisSafeProxy",
          "name": "proxy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "singleton",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "initializer",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proxyCreated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "walletFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "wallets",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162000ef838038062000ef88339810160408190526200003491620001ef565b6200003f33620000da565b6001600160a01b0384166200005357600080fd5b6001600160a01b0383166200006757600080fd5b6001600160a01b0380851660805283811660a052821660c05260005b8151811015620000cf57620000ba828281518110620000a657620000a6620002fa565b60200260200101516200012a60201b60201c565b80620000c68162000310565b91505062000083565b505050505062000338565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620001346200015b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b03163314620001ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b80516001600160a01b0381168114620001d457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156200020657600080fd5b6200021185620001bc565b9350602062000222818701620001bc565b93506200023260408701620001bc565b60608701519093506001600160401b03808211156200025057600080fd5b818801915088601f8301126200026557600080fd5b8151818111156200027a576200027a620001d9565b8060051b604051601f19603f83011681018181108582111715620002a257620002a2620001d9565b60405291825284820192508381018501918b831115620002c157600080fd5b938501935b82851015620002ea57620002da85620001bc565b84529385019392850192620002c6565b989b979a50959850505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200033157634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05160c051610b7462000384600039600081816101c30152818161020401526106f601526000818161018901526102d6015260008181610162015261033e0152610b746000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461014c578063a619486e1461015d578063c5c0369914610184578063f2fde38b146101ab578063fc0c546a146101be57600080fd5b806301567739146100a35780631e52b518146100db5780635926651d146100f0578063715018a61461010357806389b08f111461010b575b600080fd5b6100c66100b13660046108ea565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e936600461090e565b6101e5565b005b6100ee6100fe3660046108ea565b61076f565b6100ee61079e565b6101346101193660046108ea565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6000546001600160a01b0316610134565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6100ee6101b93660046108ea565b6107b2565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b8152306004820152678ac7230489e80000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027791906109a8565b10156102ca5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682066756e647320746f2070617900000000000000000060448201526064015b60405180910390fd5b84336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033c5760405162461bcd60e51b815260206004820152601660248201527543616c6c6572206d75737420626520666163746f727960501b60448201526064016102c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146103b45760405162461bcd60e51b815260206004820152601460248201527311985ad9481b585cdd195c98dbdc1e481d5cd95960621b60448201526064016102c1565b63b63e800d60e01b6103ca6004600086886109c1565b6103d3916109eb565b6001600160e01b031916146104215760405162461bcd60e51b81526020600482015260146024820152732bb937b7339034b734ba34b0b634bd30ba34b7b760611b60448201526064016102c1565b6001816001600160a01b031663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048591906109a8565b146104c65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a1c995cda1bdb19607a1b60448201526064016102c1565b6001816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052e9190810190610a41565b511461057c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f66206f776e657273000000000000000060448201526064016102c1565b6000816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e49190810190610a41565b6000815181106105f6576105f6610b06565b6020908102919091018101516001600160a01b0381166000908152600190925260409091205490915060ff1661067d5760405162461bcd60e51b815260206004820152602660248201527f4f776e6572206973206e6f7420726567697374657265642061732062656e656660448201526569636961727960d01b60648201526084016102c1565b6106a2816001600160a01b03166000908152600160205260409020805460ff19169055565b6001600160a01b038181166000908152600260205260409081902080546001600160a01b031916858416908117909155905163a9059cbb60e01b81526004810191909152678ac7230489e8000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190610b1c565b5050505050505050565b61077761082b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6107a661082b565b6107b06000610885565b565b6107ba61082b565b6001600160a01b03811661081f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c1565b61082881610885565b50565b6000546001600160a01b031633146107b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461082857600080fd5b6000602082840312156108fc57600080fd5b8135610907816108d5565b9392505050565b60008060008060006080868803121561092657600080fd5b8535610931816108d5565b94506020860135610941816108d5565b9350604086013567ffffffffffffffff8082111561095e57600080fd5b818801915088601f83011261097257600080fd5b81358181111561098157600080fd5b89602082850101111561099357600080fd5b96999598505060200195606001359392505050565b6000602082840312156109ba57600080fd5b5051919050565b600080858511156109d157600080fd5b838611156109de57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610a135780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b8051610a3c816108d5565b919050565b60006020808385031215610a5457600080fd5b825167ffffffffffffffff80821115610a6c57600080fd5b818501915085601f830112610a8057600080fd5b815181811115610a9257610a92610a1b565b8060051b604051601f19603f83011681018181108582111715610ab757610ab7610a1b565b604052918252848201925083810185019188831115610ad557600080fd5b938501935b82851015610afa57610aeb85610a31565b84529385019392850192610ada565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b2e57600080fd5b8151801515811461090757600080fdfea264697066735822122097b7da20e2dd1703204f7249b72d145732b8770b541180297109701a0cd2257764736f6c634300080f0033",
    "sourceMap": "570:3045:90:-:0;;;1070:552;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;964:32:27;736:10:45;964:18:27;:32::i;:::-;-1:-1:-1;;;;;1263:31:90;;1255:40;;;;;;-1:-1:-1;;;;;1314:34:90;;1306:43;;;;;;-1:-1:-1;;;;;1362:30:90;;;;;1403:36;;;;;1450:28;;;;1496:9;1491:124;1515:20;:27;1511:1;:31;1491:124;;;1564:39;1579:20;1600:1;1579:23;;;;;;;;:::i;:::-;;;;;;;1564:14;;;:39;;:::i;:::-;1544:3;;;;:::i;:::-;;;;1491:124;;;;1070:552;;;;570:3045;;2510:191:27;2584:16;2603:6;;-1:-1:-1;;;;;2620:17:27;;;-1:-1:-1;;;;;;2620:17:27;;;;;;2653:40;;2603:6;;;;;;;2653:40;;2584:16;2653:40;2573:128;2510:191;:::o;1630:114:90:-;1129:13:27;:11;:13::i;:::-;-1:-1:-1;;;;;1703:26:90::1;;::::0;;;1732:4:::1;1703:26;::::0;;;;;;;:33;;-1:-1:-1;;1703:33:90::1;::::0;;::::1;::::0;;1630:114::o;1408:132:27:-;1289:7;1316:6;-1:-1:-1;;;;;1316:6:27;736:10:45;1472:23:27;1464:68;;;;-1:-1:-1;;;1464:68:27;;2289:2:123;1464:68:27;;;2271:21:123;;;2308:18;;;2301:30;2367:34;2347:18;;;2340:62;2419:18;;1464:68:27;;;;;;;;1408:132::o;14:177:123:-;93:13;;-1:-1:-1;;;;;135:31:123;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:1385;450:6;458;466;474;527:3;515:9;506:7;502:23;498:33;495:53;;;544:1;541;534:12;495:53;567:40;597:9;567:40;:::i;:::-;557:50;;626:2;647:49;692:2;681:9;677:18;647:49;:::i;:::-;637:59;;715:49;760:2;749:9;745:18;715:49;:::i;:::-;808:2;793:18;;787:25;705:59;;-1:-1:-1;;;;;;861:14:123;;;858:34;;;888:1;885;878:12;858:34;926:6;915:9;911:22;901:32;;971:7;964:4;960:2;956:13;952:27;942:55;;993:1;990;983:12;942:55;1022:2;1016:9;1044:2;1040;1037:10;1034:36;;;1050:18;;:::i;:::-;1096:2;1093:1;1089:10;1128:2;1122:9;1191:2;1187:7;1182:2;1178;1174:11;1170:25;1162:6;1158:38;1246:6;1234:10;1231:22;1226:2;1214:10;1211:18;1208:46;1205:72;;;1257:18;;:::i;:::-;1293:2;1286:22;1343:18;;;1377:15;;;;-1:-1:-1;1419:11:123;;;1415:20;;;1447:19;;;1444:39;;;1479:1;1476;1469:12;1444:39;1503:11;;;;1523:159;1539:6;1534:3;1531:15;1523:159;;;1605:34;1635:3;1605:34;:::i;:::-;1593:47;;1556:12;;;;1660;;;;1523:159;;;328:1385;;;;-1:-1:-1;328:1385:123;;-1:-1:-1;;;;;;;328:1385:123:o;1718:127::-;1779:10;1774:3;1770:20;1767:1;1760:31;1810:4;1807:1;1800:15;1834:4;1831:1;1824:15;1850:232;1889:3;1910:17;;;1907:140;;1969:10;1964:3;1960:20;1957:1;1950:31;2004:4;2001:1;1994:15;2032:4;2029:1;2022:15;1907:140;-1:-1:-1;2074:1:123;2063:13;;1850:232::o;2087:356::-;570:3045:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461014c578063a619486e1461015d578063c5c0369914610184578063f2fde38b146101ab578063fc0c546a146101be57600080fd5b806301567739146100a35780631e52b518146100db5780635926651d146100f0578063715018a61461010357806389b08f111461010b575b600080fd5b6100c66100b13660046108ea565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100ee6100e936600461090e565b6101e5565b005b6100ee6100fe3660046108ea565b61076f565b6100ee61079e565b6101346101193660046108ea565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100d2565b6000546001600160a01b0316610134565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6100ee6101b93660046108ea565b6107b2565b6101347f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b8152306004820152678ac7230489e80000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610253573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027791906109a8565b10156102ca5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682066756e647320746f2070617900000000000000000060448201526064015b60405180910390fd5b84336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033c5760405162461bcd60e51b815260206004820152601660248201527543616c6c6572206d75737420626520666163746f727960501b60448201526064016102c1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146103b45760405162461bcd60e51b815260206004820152601460248201527311985ad9481b585cdd195c98dbdc1e481d5cd95960621b60448201526064016102c1565b63b63e800d60e01b6103ca6004600086886109c1565b6103d3916109eb565b6001600160e01b031916146104215760405162461bcd60e51b81526020600482015260146024820152732bb937b7339034b734ba34b0b634bd30ba34b7b760611b60448201526064016102c1565b6001816001600160a01b031663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048591906109a8565b146104c65760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a1c995cda1bdb19607a1b60448201526064016102c1565b6001816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610506573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052e9190810190610a41565b511461057c5760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964206e756d626572206f66206f776e657273000000000000000060448201526064016102c1565b6000816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e49190810190610a41565b6000815181106105f6576105f6610b06565b6020908102919091018101516001600160a01b0381166000908152600190925260409091205490915060ff1661067d5760405162461bcd60e51b815260206004820152602660248201527f4f776e6572206973206e6f7420726567697374657265642061732062656e656660448201526569636961727960d01b60648201526084016102c1565b6106a2816001600160a01b03166000908152600160205260409020805460ff19169055565b6001600160a01b038181166000908152600260205260409081902080546001600160a01b031916858416908117909155905163a9059cbb60e01b81526004810191909152678ac7230489e8000060248201527f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015610741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107659190610b1c565b5050505050505050565b61077761082b565b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6107a661082b565b6107b06000610885565b565b6107ba61082b565b6001600160a01b03811661081f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c1565b61082881610885565b50565b6000546001600160a01b031633146107b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461082857600080fd5b6000602082840312156108fc57600080fd5b8135610907816108d5565b9392505050565b60008060008060006080868803121561092657600080fd5b8535610931816108d5565b94506020860135610941816108d5565b9350604086013567ffffffffffffffff8082111561095e57600080fd5b818801915088601f83011261097257600080fd5b81358181111561098157600080fd5b89602082850101111561099357600080fd5b96999598505060200195606001359392505050565b6000602082840312156109ba57600080fd5b5051919050565b600080858511156109d157600080fd5b838611156109de57600080fd5b5050820193919092039150565b6001600160e01b03198135818116916004851015610a135780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b8051610a3c816108d5565b919050565b60006020808385031215610a5457600080fd5b825167ffffffffffffffff80821115610a6c57600080fd5b818501915085601f830112610a8057600080fd5b815181811115610a9257610a92610a1b565b8060051b604051601f19603f83011681018181108582111715610ab757610ab7610a1b565b604052918252848201925083810185019188831115610ad557600080fd5b938501935b82851015610afa57610aeb85610a31565b84529385019392850192610ada565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610b2e57600080fd5b8151801515811461090757600080fdfea264697066735822122097b7da20e2dd1703204f7249b72d145732b8770b541180297109701a0cd2257764736f6c634300080f0033",
    "sourceMap": "570:3045:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;939:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;567:14:123;;560:22;542:41;;530:2;515:18;939:46:90;;;;;;;;2073:1539;;;;;;:::i;:::-;;:::i;:::-;;1630:114;;;;;;:::i;:::-;;:::i;1891:103:27:-;;;:::i;1018:43:90:-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1018:43:90;;;;;;-1:-1:-1;;;;;1724:32:123;;;1706:51;;1694:2;1679:18;1018:43:90;1560:203:123;1243:87:27;1289:7;1316:6;-1:-1:-1;;;;;1316:6:27;1243:87;;814:35:90;;;;;856:38;;;;;2149:201:27;;;;;;:::i;:::-;;:::i;901:29:90:-;;;;;2073:1539;2302:30;;-1:-1:-1;;;2302:30:90;;2326:4;2302:30;;;1706:51:123;776:8:90;;2302:5;-1:-1:-1;;;;;2302:15:90;;;;1679:18:123;;2302:30:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;2294:83;;;;-1:-1:-1;;;2294:83:90;;2383:2:123;2294:83:90;;;2365:21:123;2422:2;2402:18;;;2395:30;2461:25;2441:18;;;2434:53;2504:18;;2294:83:90;;;;;;;;;2430:5;2508:10;-1:-1:-1;;;;;2522:13:90;2508:27;;2500:62;;;;-1:-1:-1;;;2500:62:90;;2735:2:123;2500:62:90;;;2717:21:123;2774:2;2754:18;;;2747:30;-1:-1:-1;;;2793:18:123;;;2786:52;2855:18;;2500:62:90;2533:346:123;2500:62:90;2594:10;-1:-1:-1;;;;;2581:23:90;:9;-1:-1:-1;;;;;2581:23:90;;2573:56;;;;-1:-1:-1;;;2573:56:90;;3086:2:123;2573:56:90;;;3068:21:123;3125:2;3105:18;;;3098:30;-1:-1:-1;;;3144:18:123;;;3137:50;3204:18;;2573:56:90;2884:344:123;2573:56:90;-1:-1:-1;;;2735:15:90;2748:1;2735:15;:11;;:15;:::i;:::-;2728:23;;;:::i;:::-;-1:-1:-1;;;;;;2728:52:90;;2720:85;;;;-1:-1:-1;;;2720:85:90;;4099:2:123;2720:85:90;;;4081:21:123;4138:2;4118:18;;;4111:30;-1:-1:-1;;;4157:18:123;;;4150:50;4217:18;;2720:85:90;3897:344:123;2720:85:90;727:1;2894:13;-1:-1:-1;;;;;2883:38:90;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;2875:87;;;;-1:-1:-1;;;2875:87:90;;4448:2:123;2875:87:90;;;4430:21:123;4487:2;4467:18;;;4460:30;-1:-1:-1;;;4506:18:123;;;4499:47;4563:18;;2875:87:90;4246:341:123;2875:87:90;678:1;2992:13;-1:-1:-1;;;;;2981:35:90;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2981:37:90;;;;;;;;;;;;:::i;:::-;:44;:58;2973:95;;;;-1:-1:-1;;;2973:95:90;;6203:2:123;2973:95:90;;;6185:21:123;6242:2;6222:18;;;6215:30;6281:26;6261:18;;;6254:54;6325:18;;2973:95:90;6001:348:123;2973:95:90;3145:19;3178:13;-1:-1:-1;;;;;3167:35:90;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3167:37:90;;;;;;;;;;;;:::i;:::-;3205:1;3167:40;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3228:26:90;;;;;;:13;:26;;;;;;;;3167:40;;-1:-1:-1;3228:26:90;;3220:77;;;;-1:-1:-1;;;3220:77:90;;6688:2:123;3220:77:90;;;6670:21:123;6727:2;6707:18;;;6700:30;6766:34;6746:18;;;6739:62;-1:-1:-1;;;6817:18:123;;;6810:36;6863:19;;3220:77:90;6486:402:123;3220:77:90;3350:31;3369:11;-1:-1:-1;;;;;1820:26:90;1849:5;1820:26;;;:13;:26;;;;;:34;;-1:-1:-1;;1820:34:90;;;1752:110;3350:31;-1:-1:-1;;;;;3452:20:90;;;;;;;:7;:20;;;;;;;:36;;-1:-1:-1;;;;;;3452:36:90;;;;;;;;;;3552:44;;-1:-1:-1;;;3552:44:90;;;;;7075:51:123;;;;776:8:90;7142:18:123;;;7135:34;3552:5:90;:14;;;;;;7048:18:123;;3552:44:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2235:1377;;2073:1539;;;;;:::o;1630:114::-;1129:13:27;:11;:13::i;:::-;-1:-1:-1;;;;;1703:26:90::1;;::::0;;;1732:4:::1;1703:26;::::0;;;;;;;:33;;-1:-1:-1;;1703:33:90::1;::::0;;::::1;::::0;;1630:114::o;1891:103:27:-;1129:13;:11;:13::i;:::-;1956:30:::1;1983:1;1956:18;:30::i;:::-;1891:103::o:0;2149:201::-;1129:13;:11;:13::i;:::-;-1:-1:-1;;;;;2238:22:27;::::1;2230:73;;;::::0;-1:-1:-1;;;2230:73:27;;7664:2:123;2230:73:27::1;::::0;::::1;7646:21:123::0;7703:2;7683:18;;;7676:30;7742:34;7722:18;;;7715:62;-1:-1:-1;;;7793:18:123;;;7786:36;7839:19;;2230:73:27::1;7462:402:123::0;2230:73:27::1;2314:28;2333:8;2314:18;:28::i;:::-;2149:201:::0;:::o;1408:132::-;1289:7;1316:6;-1:-1:-1;;;;;1316:6:27;736:10:45;1472:23:27;1464:68;;;;-1:-1:-1;;;1464:68:27;;8071:2:123;1464:68:27;;;8053:21:123;;;8090:18;;;8083:30;8149:34;8129:18;;;8122:62;8201:18;;1464:68:27;7869:356:123;2510:191:27;2584:16;2603:6;;-1:-1:-1;;;;;2620:17:27;;;-1:-1:-1;;;;;;2620:17:27;;;;;;2653:40;;2603:6;;;;;;;2653:40;;2584:16;2653:40;2573:128;2510:191;:::o;14:131:123:-;-1:-1:-1;;;;;89:31:123;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:123:o;594:961::-;716:6;724;732;740;748;801:3;789:9;780:7;776:23;772:33;769:53;;;818:1;815;808:12;769:53;857:9;844:23;876:31;901:5;876:31;:::i;:::-;926:5;-1:-1:-1;983:2:123;968:18;;955:32;996:33;955:32;996:33;:::i;:::-;1048:7;-1:-1:-1;1106:2:123;1091:18;;1078:32;1129:18;1159:14;;;1156:34;;;1186:1;1183;1176:12;1156:34;1224:6;1213:9;1209:22;1199:32;;1269:7;1262:4;1258:2;1254:13;1250:27;1240:55;;1291:1;1288;1281:12;1240:55;1331:2;1318:16;1357:2;1349:6;1346:14;1343:34;;;1373:1;1370;1363:12;1343:34;1418:7;1413:2;1404:6;1400:2;1396:15;1392:24;1389:37;1386:57;;;1439:1;1436;1429:12;1386:57;594:961;;;;-1:-1:-1;;1470:2:123;1462:11;;1545:2;1530:18;1517:32;;594:961;-1:-1:-1;;;594:961:123:o;1992:184::-;2062:6;2115:2;2103:9;2094:7;2090:23;2086:32;2083:52;;;2131:1;2128;2121:12;2083:52;-1:-1:-1;2154:16:123;;1992:184;-1:-1:-1;1992:184:123:o;3233:331::-;3338:9;3349;3391:8;3379:10;3376:24;3373:44;;;3413:1;3410;3403:12;3373:44;3442:6;3432:8;3429:20;3426:40;;;3462:1;3459;3452:12;3426:40;-1:-1:-1;;3488:23:123;;;3533:25;;;;;-1:-1:-1;3233:331:123:o;3569:323::-;-1:-1:-1;;;;;;3689:19:123;;3765:11;;;;3796:1;3788:10;;3785:101;;;3873:2;3867;3860:3;3857:1;3853:11;3850:1;3846:19;3842:28;3838:2;3834:37;3830:46;3821:55;;3785:101;;;3569:323;;;;:::o;4592:127::-;4653:10;4648:3;4644:20;4641:1;4634:31;4684:4;4681:1;4674:15;4708:4;4705:1;4698:15;4724:138;4803:13;;4825:31;4803:13;4825:31;:::i;:::-;4724:138;;;:::o;4867:1129::-;4962:6;4993:2;5036;5024:9;5015:7;5011:23;5007:32;5004:52;;;5052:1;5049;5042:12;5004:52;5085:9;5079:16;5114:18;5155:2;5147:6;5144:14;5141:34;;;5171:1;5168;5161:12;5141:34;5209:6;5198:9;5194:22;5184:32;;5254:7;5247:4;5243:2;5239:13;5235:27;5225:55;;5276:1;5273;5266:12;5225:55;5305:2;5299:9;5327:2;5323;5320:10;5317:36;;;5333:18;;:::i;:::-;5379:2;5376:1;5372:10;5411:2;5405:9;5474:2;5470:7;5465:2;5461;5457:11;5453:25;5445:6;5441:38;5529:6;5517:10;5514:22;5509:2;5497:10;5494:18;5491:46;5488:72;;;5540:18;;:::i;:::-;5576:2;5569:22;5626:18;;;5660:15;;;;-1:-1:-1;5702:11:123;;;5698:20;;;5730:19;;;5727:39;;;5762:1;5759;5752:12;5727:39;5786:11;;;;5806:159;5822:6;5817:3;5814:15;5806:159;;;5888:34;5918:3;5888:34;:::i;:::-;5876:47;;5839:12;;;;5943;;;;5806:159;;;5984:6;4867:1129;-1:-1:-1;;;;;;;;4867:1129:123:o;6354:127::-;6415:10;6410:3;6406:20;6403:1;6396:31;6446:4;6443:1;6436:15;6470:4;6467:1;6460:15;7180:277;7247:6;7300:2;7288:9;7279:7;7275:23;7271:32;7268:52;;;7316:1;7313;7306:12;7268:52;7348:9;7342:16;7401:5;7394:13;7387:21;7380:5;7377:32;7367:60;;7423:1;7420;7413:12",
    "linkReferences": {},
    "immutableReferences": {
      "36560": [
        {
          "start": 354,
          "length": 32
        },
        {
          "start": 830,
          "length": 32
        }
      ],
      "36562": [
        {
          "start": 393,
          "length": 32
        },
        {
          "start": 726,
          "length": 32
        }
      ],
      "36565": [
        {
          "start": 451,
          "length": 32
        },
        {
          "start": 516,
          "length": 32
        },
        {
          "start": 1782,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addBeneficiary(address)": "5926651d",
    "beneficiaries(address)": "01567739",
    "masterCopy()": "a619486e",
    "owner()": "8da5cb5b",
    "proxyCreated(address,address,bytes,uint256)": "1e52b518",
    "renounceOwnership()": "715018a6",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "walletFactory()": "c5c03699",
    "wallets(address)": "89b08f11"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterCopyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"walletFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"initialBeneficiaries\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"addBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beneficiaries\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract GnosisSafeProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"singleton\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initializer\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proxyCreated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"walletFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wallets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The registry has embedded verifications to ensure only legitimate Gnosis Safe wallets are stored.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"proxyCreated(address,address,bytes,uint256)\":{\"notice\":\"Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback setting the registry's address as the callback.\"}},\"notice\":\"A registry for Gnosis Safe wallets. When known beneficiaries deploy and register their wallets, the registry sends some Defi Ctf Tokens to the wallet.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/src-default/safeRegistry/SafeRegistry.sol\":\"SafeRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@safe/=lib/safe-contracts/\",\":@uniswapv2/=src/src-0_6_x/uniswapv2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488\",\"dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa\",\"dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/safe-contracts/contracts/GnosisSafe.sol\":{\"keccak256\":\"0xb98deec10a9e00a826bf911617ce147a9583ebc00cf5d12f3ef7ca68f3fea4cf\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5769b2b2d6712cd15362e7543fc80df72559507b30b039ae29b0a72ab6117c0b\",\"dweb:/ipfs/QmT1k1KmVdDHDxxrmJtTU398VodsA81cdAJji4BfCUNSYg\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xc80087ef7a6e394b0e3526661ffe340cc63bf14cbe921c65146584d846828479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://511135750039efd917ff87d08aa1ea319dd0f4ca483e0240164d0ad2789c0f90\",\"dweb:/ipfs/QmfW43fj4nQWdGWrC7BearQct7w7VR5b99isdVZNSPR96f\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0xadcf98c0b40d485dd20b4f81b6655d648689994af1d40a04b04a20e114ac5979\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3d9bbc28d75ea95eb9f0cbeec8f2ee44a2a691535570455d35dfb464917fd4b3\",\"dweb:/ipfs/QmXhjjhmj4ymdsJfVFnvSkjbSSprpg7VsyYCUdMzAbFWyN\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0x2426083074b8206fbfb74aee19e71af43dc558cfaaeeab6186ce8327e9d78fbd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://b766b87ec1fee3260aedc151c4c66e27d47d8d0b2ab008559bb3a1f0b8ce910b\",\"dweb:/ipfs/QmQma2ydPycycZSQZruoicpYnHhgr5iw3uW9WRC8xRGhjY\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xfb00fba066f0a179f1670303728e73019033471fb59690a2d75df84d72338747\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://73dd6a750fe3474bf7e6d006bfb8eec096f81de15634703aa9c77f4d1990519b\",\"dweb:/ipfs/QmZnJyTQKEZhaVyqDuZCAmoMnCLY5wa3SyeQ4wTNA4cXmP\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xe51730c93067ed6b2971b029a9ff979f561073e29bb968681c8e33ed273f3183\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8ff5894c3c374a9c013789371f9cc484112730f4ad994a23d63e8d947c91a55f\",\"dweb:/ipfs/QmVz7aBi6UXWNrDk1GNtysgb1gdz7PKuidBBEWm5bohDMf\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x758eb2457790c50a6b8c301841fd01ba11f899b1cf06e56b2c2c74133196a02d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e2c9b750490142c1770df5d62e21bcf4a2d8dc017b22d3a0ece24cf62e2465b9\",\"dweb:/ipfs/QmVKzUA4Jypv3RihefNmwqjy4PokVeiQEj4jWPEv65sssM\"]},\"lib/safe-contracts/contracts/common/EtherPaymentFallback.sol\":{\"keccak256\":\"0x6b1a79c3b51bf7c2a042230d6477c995ee1d9d3486941d2480ed1a64459bd1a8\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://fa5274c73c02db43271ad19ea53f859e1bcdf73ac5fd8fed1fa9e114c8ec9c4d\",\"dweb:/ipfs/QmUKq9tFUA3jyfpjeN66BH1aCppqhDZUxsgAbUJUq42WYt\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0xa70347542386136f9687feb969dbb53886ef431c2f6e5a27a50ac7dca0579d32\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://005a0c00434e8fb973c2e3f6c02782e45ba5b56a7d689b23772e87dce74473f1\",\"dweb:/ipfs/QmNSMX6mHQgzJLhQahgK5ciWtrdJZZ8Lt6qWX6i261KU4E\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0x449be7ba3829c61a4c55525874d544b851f511b66ef8c2bc30229d4c50b21446\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://6e8df86641ffcac9a7e6db28ad8c5b12d7a11a07cc3f25f7cbad910070cbb05c\",\"dweb:/ipfs/QmVzHdT3gaiaRrQF8y6mWViSBHD44toXEz32h98dwNetSk\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0xb64ead1eccdeeb679d7c9a62e883e8e9953241f9144ddc72361f9292675fcf7f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://891bb61ec38f6806a33e4e7d0735f4b499d0ec470207e0d8234a8e8210ed9294\",\"dweb:/ipfs/QmdJA1TL4gjwKVb3dHP1XXF83gGDz7oLVL722SVJUsjYtQ\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0xd64bb544ba159ab04ca22e5b78f94c18e10adaaa7934d80b5c74d15f8e151b29\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7af5ae11c8c52be01bbcf5bfb28073b33bc87cac499c85cefc9440cdc1133597\",\"dweb:/ipfs/QmRSkuT2aTcd5CEf3AF9mFz4sqNfX1Z1TeTHaWhyoM463g\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0xebc37e01f55a233bc3063a66933ba782aa1adeae4229a627be20ab7fa36bc09a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0fc7f05dbaa10e45911b4cc7f16fcbd169936daef96665e1b4dd77b704787c66\",\"dweb:/ipfs/Qmag5HrgTyCTpwsfxJ9fdYCPCHJsMWFsjtMMA8BWGTc6my\"]},\"lib/safe-contracts/contracts/external/GnosisSafeMath.sol\":{\"keccak256\":\"0xf4a2fd41567785e2157201ec1f29292356af8d7ac8f553b3bd96601d1395d191\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8c41be20fc83ff207618885ceedba8b7b34369a658cf44558d8e87e5285e80ff\",\"dweb:/ipfs/QmV2vJKUh1MaKvNYVUi8TBjVfuR3RbPC2EmvPp1efEztMi\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0290748f33e10b6318b1917731749dbc74ddee153885a216645249eaebff3e9c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://200bfedd383f509942f462d1f8268031e2abde3472472440f642bd32571ec1de\",\"dweb:/ipfs/QmYo8KxSYcd64ha24uCZqh56sJmJCJBAW9umxFJFG8K1kQ\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0xb819efe4f3e6068e08e1bf2e733b88310679dcf8c8dd11a02b3aa4107bea84f7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://01b5fbc319eea003f177c724b18af5e75d7bd826befd56c6ac534735d501b017\",\"dweb:/ipfs/QmbWSBRfMyisBQ6nvH8BRDvz1NChz4E1jYjXsTXoiQ2pVo\"]},\"lib/safe-contracts/contracts/proxies/GnosisSafeProxy.sol\":{\"keccak256\":\"0xa926e53ca29ffb3c9648f7f104a5b99b58c798bc7f10df6188936648ef0c98ab\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8dedc2722a13eba9d438df1ebb445acb90e2a98d4adc29069dc9579d18a687dc\",\"dweb:/ipfs/QmQu44bQwjEaJXWBKc7RXkAzVAwGoYZecwQCUWAmtatAtG\"]},\"lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0x362621dfce76c5333e9cd130ca7b7c8c21d1f2a7d0c01f42f9f7f43cd1c70841\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://de3ee5307da8cbe631baac80a490362398e48b185a52d9957aceae22d1e0856a\",\"dweb:/ipfs/QmafaV3uJvau2rZAChREhs3WCn4RzsJvoHyAh2MbYdFZ9g\"]},\"src/src-default/safeRegistry/SafeRegistry.sol\":{\"keccak256\":\"0x6b5451ff458a726fbe5211b8d3c5c5d5f50916ec8312f2615cc880d6645d52e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ea31cbcc7bff6a28e701d2e2c444c65d846019200ca2dbe3e4a3967d00087a5\",\"dweb:/ipfs/QmQN4mDp3B7rBByUxzjKfDE2rcuTVHnkwqZk3smhkmbG3u\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "masterCopyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "walletFactoryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "initialBeneficiaries",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addBeneficiary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beneficiaries",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "masterCopy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract GnosisSafeProxy",
              "name": "proxy",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "singleton",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initializer",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proxyCreated"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "walletFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "wallets",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "proxyCreated(address,address,bytes,uint256)": {
            "notice": "Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback setting the registry's address as the callback."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@safe/=lib/safe-contracts/",
        ":@uniswapv2/=src/src-0_6_x/uniswapv2/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":safe-contracts/=lib/safe-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/src-default/safeRegistry/SafeRegistry.sol": "SafeRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xee2b6bc803215b66037612da0fe9f23ec3c99ff89db4ff05449a8df17c9befc5",
        "urls": [
          "bzz-raw://127be279bb6b2f6106127ea6b431cfc879f9018dd76b7575841821be9eef3488",
          "dweb:/ipfs/QmfXqvL6sKx256hrVuQcSnNtirZrpm4JUbDFXwGHKgrrXU"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130",
        "urls": [
          "bzz-raw://567e5cfe5c64fb8c5f041393d42178447cf00880a2a2172a5a8e83131e1c24fa",
          "dweb:/ipfs/QmY6KVSBk5xbtZuyhcQPNyJAATMZnmJ45TcBBAE7rzD5du"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
        "urls": [
          "bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
          "dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/GnosisSafe.sol": {
        "keccak256": "0xb98deec10a9e00a826bf911617ce147a9583ebc00cf5d12f3ef7ca68f3fea4cf",
        "urls": [
          "bzz-raw://5769b2b2d6712cd15362e7543fc80df72559507b30b039ae29b0a72ab6117c0b",
          "dweb:/ipfs/QmT1k1KmVdDHDxxrmJtTU398VodsA81cdAJji4BfCUNSYg"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0xc80087ef7a6e394b0e3526661ffe340cc63bf14cbe921c65146584d846828479",
        "urls": [
          "bzz-raw://511135750039efd917ff87d08aa1ea319dd0f4ca483e0240164d0ad2789c0f90",
          "dweb:/ipfs/QmfW43fj4nQWdGWrC7BearQct7w7VR5b99isdVZNSPR96f"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0xadcf98c0b40d485dd20b4f81b6655d648689994af1d40a04b04a20e114ac5979",
        "urls": [
          "bzz-raw://3d9bbc28d75ea95eb9f0cbeec8f2ee44a2a691535570455d35dfb464917fd4b3",
          "dweb:/ipfs/QmXhjjhmj4ymdsJfVFnvSkjbSSprpg7VsyYCUdMzAbFWyN"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0x2426083074b8206fbfb74aee19e71af43dc558cfaaeeab6186ce8327e9d78fbd",
        "urls": [
          "bzz-raw://b766b87ec1fee3260aedc151c4c66e27d47d8d0b2ab008559bb3a1f0b8ce910b",
          "dweb:/ipfs/QmQma2ydPycycZSQZruoicpYnHhgr5iw3uW9WRC8xRGhjY"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0xfb00fba066f0a179f1670303728e73019033471fb59690a2d75df84d72338747",
        "urls": [
          "bzz-raw://73dd6a750fe3474bf7e6d006bfb8eec096f81de15634703aa9c77f4d1990519b",
          "dweb:/ipfs/QmZnJyTQKEZhaVyqDuZCAmoMnCLY5wa3SyeQ4wTNA4cXmP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0xe51730c93067ed6b2971b029a9ff979f561073e29bb968681c8e33ed273f3183",
        "urls": [
          "bzz-raw://8ff5894c3c374a9c013789371f9cc484112730f4ad994a23d63e8d947c91a55f",
          "dweb:/ipfs/QmVz7aBi6UXWNrDk1GNtysgb1gdz7PKuidBBEWm5bohDMf"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x758eb2457790c50a6b8c301841fd01ba11f899b1cf06e56b2c2c74133196a02d",
        "urls": [
          "bzz-raw://e2c9b750490142c1770df5d62e21bcf4a2d8dc017b22d3a0ece24cf62e2465b9",
          "dweb:/ipfs/QmVKzUA4Jypv3RihefNmwqjy4PokVeiQEj4jWPEv65sssM"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/EtherPaymentFallback.sol": {
        "keccak256": "0x6b1a79c3b51bf7c2a042230d6477c995ee1d9d3486941d2480ed1a64459bd1a8",
        "urls": [
          "bzz-raw://fa5274c73c02db43271ad19ea53f859e1bcdf73ac5fd8fed1fa9e114c8ec9c4d",
          "dweb:/ipfs/QmUKq9tFUA3jyfpjeN66BH1aCppqhDZUxsgAbUJUq42WYt"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0xa70347542386136f9687feb969dbb53886ef431c2f6e5a27a50ac7dca0579d32",
        "urls": [
          "bzz-raw://005a0c00434e8fb973c2e3f6c02782e45ba5b56a7d689b23772e87dce74473f1",
          "dweb:/ipfs/QmNSMX6mHQgzJLhQahgK5ciWtrdJZZ8Lt6qWX6i261KU4E"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0x449be7ba3829c61a4c55525874d544b851f511b66ef8c2bc30229d4c50b21446",
        "urls": [
          "bzz-raw://6e8df86641ffcac9a7e6db28ad8c5b12d7a11a07cc3f25f7cbad910070cbb05c",
          "dweb:/ipfs/QmVzHdT3gaiaRrQF8y6mWViSBHD44toXEz32h98dwNetSk"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0xb64ead1eccdeeb679d7c9a62e883e8e9953241f9144ddc72361f9292675fcf7f",
        "urls": [
          "bzz-raw://891bb61ec38f6806a33e4e7d0735f4b499d0ec470207e0d8234a8e8210ed9294",
          "dweb:/ipfs/QmdJA1TL4gjwKVb3dHP1XXF83gGDz7oLVL722SVJUsjYtQ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0xd64bb544ba159ab04ca22e5b78f94c18e10adaaa7934d80b5c74d15f8e151b29",
        "urls": [
          "bzz-raw://7af5ae11c8c52be01bbcf5bfb28073b33bc87cac499c85cefc9440cdc1133597",
          "dweb:/ipfs/QmRSkuT2aTcd5CEf3AF9mFz4sqNfX1Z1TeTHaWhyoM463g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0xebc37e01f55a233bc3063a66933ba782aa1adeae4229a627be20ab7fa36bc09a",
        "urls": [
          "bzz-raw://0fc7f05dbaa10e45911b4cc7f16fcbd169936daef96665e1b4dd77b704787c66",
          "dweb:/ipfs/Qmag5HrgTyCTpwsfxJ9fdYCPCHJsMWFsjtMMA8BWGTc6my"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/GnosisSafeMath.sol": {
        "keccak256": "0xf4a2fd41567785e2157201ec1f29292356af8d7ac8f553b3bd96601d1395d191",
        "urls": [
          "bzz-raw://8c41be20fc83ff207618885ceedba8b7b34369a658cf44558d8e87e5285e80ff",
          "dweb:/ipfs/QmV2vJKUh1MaKvNYVUi8TBjVfuR3RbPC2EmvPp1efEztMi"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x0290748f33e10b6318b1917731749dbc74ddee153885a216645249eaebff3e9c",
        "urls": [
          "bzz-raw://200bfedd383f509942f462d1f8268031e2abde3472472440f642bd32571ec1de",
          "dweb:/ipfs/QmYo8KxSYcd64ha24uCZqh56sJmJCJBAW9umxFJFG8K1kQ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0xb819efe4f3e6068e08e1bf2e733b88310679dcf8c8dd11a02b3aa4107bea84f7",
        "urls": [
          "bzz-raw://01b5fbc319eea003f177c724b18af5e75d7bd826befd56c6ac534735d501b017",
          "dweb:/ipfs/QmbWSBRfMyisBQ6nvH8BRDvz1NChz4E1jYjXsTXoiQ2pVo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/GnosisSafeProxy.sol": {
        "keccak256": "0xa926e53ca29ffb3c9648f7f104a5b99b58c798bc7f10df6188936648ef0c98ab",
        "urls": [
          "bzz-raw://8dedc2722a13eba9d438df1ebb445acb90e2a98d4adc29069dc9579d18a687dc",
          "dweb:/ipfs/QmQu44bQwjEaJXWBKc7RXkAzVAwGoYZecwQCUWAmtatAtG"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol": {
        "keccak256": "0x362621dfce76c5333e9cd130ca7b7c8c21d1f2a7d0c01f42f9f7f43cd1c70841",
        "urls": [
          "bzz-raw://de3ee5307da8cbe631baac80a490362398e48b185a52d9957aceae22d1e0856a",
          "dweb:/ipfs/QmafaV3uJvau2rZAChREhs3WCn4RzsJvoHyAh2MbYdFZ9g"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/src-default/safeRegistry/SafeRegistry.sol": {
        "keccak256": "0x6b5451ff458a726fbe5211b8d3c5c5d5f50916ec8312f2615cc880d6645d52e2",
        "urls": [
          "bzz-raw://3ea31cbcc7bff6a28e701d2e2c444c65d846019200ca2dbe3e4a3967d00087a5",
          "dweb:/ipfs/QmQN4mDp3B7rBByUxzjKfDE2rcuTVHnkwqZk3smhkmbG3u"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/src-default/safeRegistry/SafeRegistry.sol",
    "id": 36786,
    "exportedSymbols": {
      "BaseGuard": [
        32590
      ],
      "Context": [
        29664
      ],
      "Enum": [
        33536
      ],
      "EtherPaymentFallback": [
        33558
      ],
      "Executor": [
        32472
      ],
      "FallbackManager": [
        32523
      ],
      "GnosisSafe": [
        32440
      ],
      "GnosisSafeMath": [
        33792
      ],
      "GnosisSafeProxy": [
        33863
      ],
      "Guard": [
        32564
      ],
      "GuardManager": [
        32651
      ],
      "IERC165": [
        33804
      ],
      "IERC20": [
        27667
      ],
      "IProxy": [
        33832
      ],
      "IProxyCreationCallback": [
        34126
      ],
      "ISignatureValidator": [
        33823
      ],
      "ISignatureValidatorConstants": [
        33810
      ],
      "ModuleManager": [
        33018
      ],
      "Ownable": [
        26510
      ],
      "OwnerManager": [
        33529
      ],
      "SafeRegistry": [
        36785
      ],
      "SecuredTokenTransfer": [
        33585
      ],
      "SelfAuthorized": [
        33611
      ],
      "SignatureDecoder": [
        33631
      ],
      "Singleton": [
        33637
      ],
      "StorageAccessible": [
        33686
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3584:90",
    "nodes": [
      {
        "id": 36540,
        "nodeType": "PragmaDirective",
        "src": "33:23:90",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 36541,
        "nodeType": "ImportDirective",
        "src": "60:52:90",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36786,
        "sourceUnit": 26511,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36542,
        "nodeType": "ImportDirective",
        "src": "114:56:90",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36786,
        "sourceUnit": 27668,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36543,
        "nodeType": "ImportDirective",
        "src": "172:40:90",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/GnosisSafe.sol",
        "file": "@safe/contracts/GnosisSafe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36786,
        "sourceUnit": 32441,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36544,
        "nodeType": "ImportDirective",
        "src": "214:60:90",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol",
        "file": "@safe/contracts/proxies/IProxyCreationCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 36786,
        "sourceUnit": 34127,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 36785,
        "nodeType": "ContractDefinition",
        "src": "570:3045:90",
        "nodes": [
          {
            "id": 36552,
            "nodeType": "VariableDeclaration",
            "src": "640:39:90",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_OWNERS",
            "nameLocation": "665:10:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36550,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "640:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 36551,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "678:1:90",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 36555,
            "nodeType": "VariableDeclaration",
            "src": "686:42:90",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "MAX_THRESHOLD",
            "nameLocation": "711:13:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36553,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "686:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 36554,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "727:1:90",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "id": 36558,
            "nodeType": "VariableDeclaration",
            "src": "735:49:90",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "TOKEN_PAYMENT",
            "nameLocation": "760:13:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 36556,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "735:7:90",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 36557,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "776:8:90",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                "typeString": "int_const 10000000000000000000"
              },
              "value": "10"
            },
            "visibility": "private"
          },
          {
            "id": 36560,
            "nodeType": "VariableDeclaration",
            "src": "814:35:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "a619486e",
            "mutability": "immutable",
            "name": "masterCopy",
            "nameLocation": "839:10:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36559,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "814:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 36562,
            "nodeType": "VariableDeclaration",
            "src": "856:38:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "c5c03699",
            "mutability": "immutable",
            "name": "walletFactory",
            "nameLocation": "881:13:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36561,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "856:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 36565,
            "nodeType": "VariableDeclaration",
            "src": "901:29:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "925:5:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$27667",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 36564,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 36563,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27667,
                "src": "901:6:90"
              },
              "referencedDeclaration": 27667,
              "src": "901:6:90",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$27667",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 36569,
            "nodeType": "VariableDeclaration",
            "src": "939:46:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "01567739",
            "mutability": "mutable",
            "name": "beneficiaries",
            "nameLocation": "972:13:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 36568,
              "keyType": {
                "id": 36566,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "948:7:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "939:25:90",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 36567,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "959:4:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 36573,
            "nodeType": "VariableDeclaration",
            "src": "1018:43:90",
            "nodes": [],
            "constant": false,
            "functionSelector": "89b08f11",
            "mutability": "mutable",
            "name": "wallets",
            "nameLocation": "1054:7:90",
            "scope": 36785,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 36572,
              "keyType": {
                "id": 36570,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1027:7:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1018:28:90",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 36571,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1038:7:90",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 36637,
            "nodeType": "FunctionDefinition",
            "src": "1070:552:90",
            "nodes": [],
            "body": {
              "id": 36636,
              "nodeType": "Block",
              "src": "1244:378:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36586,
                          "name": "masterCopyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36575,
                          "src": "1263:17:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1292:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1284:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36587,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1284:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1284:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1263:31:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 36585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1255:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 36592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1255:40:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36593,
                  "nodeType": "ExpressionStatement",
                  "src": "1255:40:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36595,
                          "name": "walletFactoryAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36577,
                          "src": "1314:20:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36598,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1346:1:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1338:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36596,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1338:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1338:10:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1314:34:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 36594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1306:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 36601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1306:43:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36602,
                  "nodeType": "ExpressionStatement",
                  "src": "1306:43:90"
                },
                {
                  "expression": {
                    "id": 36605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36603,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36560,
                      "src": "1362:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36604,
                      "name": "masterCopyAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36575,
                      "src": "1375:17:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1362:30:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36606,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:30:90"
                },
                {
                  "expression": {
                    "id": 36609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36607,
                      "name": "walletFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36562,
                      "src": "1403:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36608,
                      "name": "walletFactoryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36577,
                      "src": "1419:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1403:36:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36610,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:36:90"
                },
                {
                  "expression": {
                    "id": 36615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36611,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36565,
                      "src": "1450:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27667",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36613,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36579,
                          "src": "1465:12:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36612,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27667,
                        "src": "1458:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$27667_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 36614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1458:20:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$27667",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1450:28:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$27667",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 36616,
                  "nodeType": "ExpressionStatement",
                  "src": "1450:28:90"
                },
                {
                  "body": {
                    "id": 36634,
                    "nodeType": "Block",
                    "src": "1549:66:90",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 36629,
                                "name": "initialBeneficiaries",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36582,
                                "src": "1579:20:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 36631,
                              "indexExpression": {
                                "id": 36630,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36618,
                                "src": "1600:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1579:23:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 36628,
                            "name": "addBeneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36651,
                            "src": "1564:14:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 36632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1564:39:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 36633,
                        "nodeType": "ExpressionStatement",
                        "src": "1564:39:90"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 36624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 36621,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36618,
                      "src": "1511:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 36622,
                        "name": "initialBeneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36582,
                        "src": "1515:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 36623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1515:27:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1511:31:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36635,
                  "initializationExpression": {
                    "assignments": [
                      36618
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 36618,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1504:1:90",
                        "nodeType": "VariableDeclaration",
                        "scope": 36635,
                        "src": "1496:9:90",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 36617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:7:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 36620,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 36619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1508:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1496:13:90"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 36626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1544:3:90",
                      "subExpression": {
                        "id": 36625,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36618,
                        "src": "1544:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 36627,
                    "nodeType": "ExpressionStatement",
                    "src": "1544:3:90"
                  },
                  "nodeType": "ForStatement",
                  "src": "1491:124:90"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36575,
                  "mutability": "mutable",
                  "name": "masterCopyAddress",
                  "nameLocation": "1100:17:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36637,
                  "src": "1092:25:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36577,
                  "mutability": "mutable",
                  "name": "walletFactoryAddress",
                  "nameLocation": "1136:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36637,
                  "src": "1128:28:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1128:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36579,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1176:12:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36637,
                  "src": "1168:20:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36582,
                  "mutability": "mutable",
                  "name": "initialBeneficiaries",
                  "nameLocation": "1216:20:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36637,
                  "src": "1199:37:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36580,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1199:7:90",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 36581,
                    "nodeType": "ArrayTypeName",
                    "src": "1199:9:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1081:162:90"
            },
            "returnParameters": {
              "id": 36584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1244:0:90"
            },
            "scope": 36785,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36651,
            "nodeType": "FunctionDefinition",
            "src": "1630:114:90",
            "nodes": [],
            "body": {
              "id": 36650,
              "nodeType": "Block",
              "src": "1692:52:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36644,
                        "name": "beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36569,
                        "src": "1703:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 36646,
                      "indexExpression": {
                        "id": 36645,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36639,
                        "src": "1717:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1703:26:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 36647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1732:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1703:33:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36649,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:33:90"
                }
              ]
            },
            "functionSelector": "5926651d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 36642,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 36641,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26429,
                  "src": "1682:9:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "1682:9:90"
              }
            ],
            "name": "addBeneficiary",
            "nameLocation": "1639:14:90",
            "parameters": {
              "id": 36640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36639,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1662:11:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36651,
                  "src": "1654:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1654:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1653:21:90"
            },
            "returnParameters": {
              "id": 36643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:0:90"
            },
            "scope": 36785,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36663,
            "nodeType": "FunctionDefinition",
            "src": "1752:110:90",
            "nodes": [],
            "body": {
              "id": 36662,
              "nodeType": "Block",
              "src": "1809:53:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 36660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36656,
                        "name": "beneficiaries",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36569,
                        "src": "1820:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 36658,
                      "indexExpression": {
                        "id": 36657,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36653,
                        "src": "1834:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1820:26:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 36659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1849:5:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1820:34:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36661,
                  "nodeType": "ExpressionStatement",
                  "src": "1820:34:90"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeBeneficiary",
            "nameLocation": "1761:18:90",
            "parameters": {
              "id": 36654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36653,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1788:11:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36663,
                  "src": "1780:19:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1780:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:21:90"
            },
            "returnParameters": {
              "id": 36655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:0:90"
            },
            "scope": 36785,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 36784,
            "nodeType": "FunctionDefinition",
            "src": "2073:1539:90",
            "nodes": [],
            "body": {
              "id": 36783,
              "nodeType": "Block",
              "src": "2235:1377:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 36682,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2326:4:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SafeRegistry_$36785",
                                    "typeString": "contract SafeRegistry"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SafeRegistry_$36785",
                                    "typeString": "contract SafeRegistry"
                                  }
                                ],
                                "id": 36681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2318:7:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 36680,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2318:7:90",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 36683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2318:13:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 36678,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36565,
                              "src": "2302:5:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$27667",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 36679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27624,
                            "src": "2302:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 36684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2302:30:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 36685,
                          "name": "TOKEN_PAYMENT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36558,
                          "src": "2336:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2302:47:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682066756e647320746f20706179",
                        "id": 36687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2351:25:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a7eb44b905fa0f09de78f0c019ef53f9c258c37eb27b2b50c18888808084a464",
                          "typeString": "literal_string \"Not enough funds to pay\""
                        },
                        "value": "Not enough funds to pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a7eb44b905fa0f09de78f0c019ef53f9c258c37eb27b2b50c18888808084a464",
                          "typeString": "literal_string \"Not enough funds to pay\""
                        }
                      ],
                      "id": 36677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2294:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2294:83:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36689,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:83:90"
                },
                {
                  "assignments": [
                    36691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36691,
                      "mutability": "mutable",
                      "name": "walletAddress",
                      "nameLocation": "2406:13:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 36783,
                      "src": "2390:29:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 36690,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2390:15:90",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36696,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 36694,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36667,
                        "src": "2430:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                          "typeString": "contract GnosisSafeProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                          "typeString": "contract GnosisSafeProxy"
                        }
                      ],
                      "id": 36693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2422:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 36692,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2422:8:90",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 36695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:14:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2390:46:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 36698,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2508:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 36699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2508:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36700,
                          "name": "walletFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36562,
                          "src": "2522:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2508:27:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206d75737420626520666163746f7279",
                        "id": 36702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2537:24:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97c12ab8dae2b6e3423b1ff7818ef5070ca5a3d084f084a0ac8ed4219990db9d",
                          "typeString": "literal_string \"Caller must be factory\""
                        },
                        "value": "Caller must be factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97c12ab8dae2b6e3423b1ff7818ef5070ca5a3d084f084a0ac8ed4219990db9d",
                          "typeString": "literal_string \"Caller must be factory\""
                        }
                      ],
                      "id": 36697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2500:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2500:62:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36704,
                  "nodeType": "ExpressionStatement",
                  "src": "2500:62:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36706,
                          "name": "singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36669,
                          "src": "2581:9:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36707,
                          "name": "masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36560,
                          "src": "2594:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2581:23:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46616b65206d6173746572636f70792075736564",
                        "id": 36709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2606:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83826d6b88f2c000c04fb2c3c950d88d1ee6f78ad0dbd54df1c9b39527548fe2",
                          "typeString": "literal_string \"Fake mastercopy used\""
                        },
                        "value": "Fake mastercopy used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83826d6b88f2c000c04fb2c3c950d88d1ee6f78ad0dbd54df1c9b39527548fe2",
                          "typeString": "literal_string \"Fake mastercopy used\""
                        }
                      ],
                      "id": 36705,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2573:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2573:56:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36711,
                  "nodeType": "ExpressionStatement",
                  "src": "2573:56:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 36722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 36715,
                                "name": "initializer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 36671,
                                "src": "2735:11:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "endExpression": {
                                "hexValue": "34",
                                "id": 36716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2748:1:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "id": 36717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexRangeAccess",
                              "src": "2735:15:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                "typeString": "bytes calldata slice"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                "typeString": "bytes calldata slice"
                              }
                            ],
                            "id": 36714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2728:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes4_$",
                              "typeString": "type(bytes4)"
                            },
                            "typeName": {
                              "id": 36713,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "2728:6:90",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:23:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 36719,
                              "name": "GnosisSafe",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32440,
                              "src": "2755:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                                "typeString": "type(contract GnosisSafe)"
                              }
                            },
                            "id": 36720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "setup",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31655,
                            "src": "2755:16:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_uint256_$_t_address_$_t_bytes_calldata_ptr_$_t_address_$_t_address_$_t_uint256_$_t_address_payable_$returns$__$",
                              "typeString": "function GnosisSafe.setup(address[] calldata,uint256,address,bytes calldata,address,address,uint256,address payable)"
                            }
                          },
                          "id": 36721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "selector",
                          "nodeType": "MemberAccess",
                          "src": "2755:25:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "2728:52:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "57726f6e6720696e697469616c697a6174696f6e",
                        "id": 36723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2782:22:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_610b6ee8792bcbd445b3479ab1729bc7a603b84d32d0a07ab8538b84833f4969",
                          "typeString": "literal_string \"Wrong initialization\""
                        },
                        "value": "Wrong initialization"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_610b6ee8792bcbd445b3479ab1729bc7a603b84d32d0a07ab8538b84833f4969",
                          "typeString": "literal_string \"Wrong initialization\""
                        }
                      ],
                      "id": 36712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2720:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:85:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36725,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:85:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 36728,
                                  "name": "walletAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36691,
                                  "src": "2894:13:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 36727,
                                "name": "GnosisSafe",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32440,
                                "src": "2883:10:90",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                                  "typeString": "type(contract GnosisSafe)"
                                }
                              },
                              "id": 36729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2883:25:90",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GnosisSafe_$32440",
                                "typeString": "contract GnosisSafe"
                              }
                            },
                            "id": 36730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getThreshold",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33456,
                            "src": "2883:38:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 36731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2883:40:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36732,
                          "name": "MAX_THRESHOLD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36555,
                          "src": "2927:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2883:57:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207468726573686f6c64",
                        "id": 36734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:19:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ff97c68cc1ac5ac02627bc56a7952ed013c289f74b6ec864fdb7b550327a4a9",
                          "typeString": "literal_string \"Invalid threshold\""
                        },
                        "value": "Invalid threshold"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ff97c68cc1ac5ac02627bc56a7952ed013c289f74b6ec864fdb7b550327a4a9",
                          "typeString": "literal_string \"Invalid threshold\""
                        }
                      ],
                      "id": 36726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2875:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:87:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36736,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:87:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 36745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 36739,
                                    "name": "walletAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 36691,
                                    "src": "2992:13:90",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "id": 36738,
                                  "name": "GnosisSafe",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32440,
                                  "src": "2981:10:90",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                                    "typeString": "type(contract GnosisSafe)"
                                  }
                                },
                                "id": 36740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2981:25:90",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GnosisSafe_$32440",
                                  "typeString": "contract GnosisSafe"
                                }
                              },
                              "id": 36741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getOwners",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 33528,
                              "src": "2981:35:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function () view external returns (address[] memory)"
                              }
                            },
                            "id": 36742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2981:37:90",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 36743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2981:44:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36744,
                          "name": "MAX_OWNERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36552,
                          "src": "3029:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2981:58:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206e756d626572206f66206f776e657273",
                        "id": 36746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3041:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2eb55daffdd0fab02c96aaebfea9eee4ce0f9094f6caa536047712aae775b261",
                          "typeString": "literal_string \"Invalid number of owners\""
                        },
                        "value": "Invalid number of owners"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2eb55daffdd0fab02c96aaebfea9eee4ce0f9094f6caa536047712aae775b261",
                          "typeString": "literal_string \"Invalid number of owners\""
                        }
                      ],
                      "id": 36737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2973:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2973:95:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36748,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:95:90"
                },
                {
                  "assignments": [
                    36750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 36750,
                      "mutability": "mutable",
                      "name": "walletOwner",
                      "nameLocation": "3153:11:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 36783,
                      "src": "3145:19:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36749,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3145:7:90",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 36758,
                  "initialValue": {
                    "baseExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 36752,
                              "name": "walletAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36691,
                              "src": "3178:13:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 36751,
                            "name": "GnosisSafe",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32440,
                            "src": "3167:10:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GnosisSafe_$32440_$",
                              "typeString": "type(contract GnosisSafe)"
                            }
                          },
                          "id": 36753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3167:25:90",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GnosisSafe_$32440",
                            "typeString": "contract GnosisSafe"
                          }
                        },
                        "id": 36754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getOwners",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33528,
                        "src": "3167:35:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function () view external returns (address[] memory)"
                        }
                      },
                      "id": 36755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3167:37:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 36757,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 36756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3205:1:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3167:40:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3145:62:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 36760,
                          "name": "beneficiaries",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36569,
                          "src": "3228:13:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 36762,
                        "indexExpression": {
                          "id": 36761,
                          "name": "walletOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36750,
                          "src": "3242:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3228:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e6572206973206e6f7420726567697374657265642061732062656e6566696369617279",
                        "id": 36763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:40:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c004dcecfabc7e4f0d285562b80f9ff8036c7b0b5e656a0285b8c1a09c1ba0ca",
                          "typeString": "literal_string \"Owner is not registered as beneficiary\""
                        },
                        "value": "Owner is not registered as beneficiary"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c004dcecfabc7e4f0d285562b80f9ff8036c7b0b5e656a0285b8c1a09c1ba0ca",
                          "typeString": "literal_string \"Owner is not registered as beneficiary\""
                        }
                      ],
                      "id": 36759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3220:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:77:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36765,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:77:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36767,
                        "name": "walletOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36750,
                        "src": "3369:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36766,
                      "name": "_removeBeneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36663,
                      "src": "3350:18:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 36768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:31:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36769,
                  "nodeType": "ExpressionStatement",
                  "src": "3350:31:90"
                },
                {
                  "expression": {
                    "id": 36774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 36770,
                        "name": "wallets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36573,
                        "src": "3452:7:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 36772,
                      "indexExpression": {
                        "id": 36771,
                        "name": "walletOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36750,
                        "src": "3460:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3452:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36773,
                      "name": "walletAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36691,
                      "src": "3475:13:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3452:36:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36775,
                  "nodeType": "ExpressionStatement",
                  "src": "3452:36:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 36779,
                        "name": "walletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36691,
                        "src": "3567:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 36780,
                        "name": "TOKEN_PAYMENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36558,
                        "src": "3582:13:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 36776,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36565,
                        "src": "3552:5:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$27667",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 36778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27634,
                      "src": "3552:14:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 36781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3552:44:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 36782,
                  "nodeType": "ExpressionStatement",
                  "src": "3552:44:90"
                }
              ]
            },
            "baseFunctions": [
              34125
            ],
            "documentation": {
              "id": 36664,
              "nodeType": "StructuredDocumentation",
              "src": "1870:197:90",
              "text": "@notice Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback\nsetting the registry's address as the callback."
            },
            "functionSelector": "1e52b518",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxyCreated",
            "nameLocation": "2082:12:90",
            "overrides": {
              "id": 36675,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2226:8:90"
            },
            "parameters": {
              "id": 36674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36667,
                  "mutability": "mutable",
                  "name": "proxy",
                  "nameLocation": "2121:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "2105:21:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                    "typeString": "contract GnosisSafeProxy"
                  },
                  "typeName": {
                    "id": 36666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 36665,
                      "name": "GnosisSafeProxy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33863,
                      "src": "2105:15:90"
                    },
                    "referencedDeclaration": 33863,
                    "src": "2105:15:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GnosisSafeProxy_$33863",
                      "typeString": "contract GnosisSafeProxy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36669,
                  "mutability": "mutable",
                  "name": "singleton",
                  "nameLocation": "2145:9:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "2137:17:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36671,
                  "mutability": "mutable",
                  "name": "initializer",
                  "nameLocation": "2180:11:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "2165:26:90",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 36670,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36673,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36784,
                  "src": "2202:7:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36672,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2094:122:90"
            },
            "returnParameters": {
              "id": 36676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2235:0:90"
            },
            "scope": 36785,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 36546,
              "name": "IProxyCreationCallback",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34126,
              "src": "595:22:90"
            },
            "id": 36547,
            "nodeType": "InheritanceSpecifier",
            "src": "595:22:90"
          },
          {
            "baseName": {
              "id": 36548,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26510,
              "src": "619:7:90"
            },
            "id": 36549,
            "nodeType": "InheritanceSpecifier",
            "src": "619:7:90"
          }
        ],
        "canonicalName": "SafeRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36545,
          "nodeType": "StructuredDocumentation",
          "src": "278:290:90",
          "text": " @notice A registry for Gnosis Safe wallets.\nWhen known beneficiaries deploy and register their wallets, the registry sends some Defi Ctf Tokens to the wallet.\n @dev The registry has embedded verifications to ensure only legitimate Gnosis Safe wallets are stored."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36785,
          26510,
          29664,
          34126
        ],
        "name": "SafeRegistry",
        "nameLocation": "579:12:90",
        "scope": 36786,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 90
}