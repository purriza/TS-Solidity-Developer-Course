{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "proxiableUUID()": "52d1902d",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@safe/=lib/safe-contracts/\",\":@uniswapv2/=src/src-0_6_x/uniswapv2/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0xa63f31ccb74383b73c47e617ab3d0848c2775d04e45d48623b4f7282fc00f1ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c830dbffb8c23001fce1311eab2faf42d622e3907fcf86ce14a44e94f9eb45d\",\"dweb:/ipfs/QmU4n7MJpCTizCVzC5fB8GoqQUcszA7eNRjKvxmBnLa1fn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x20db54d070f5faa97267693b8d01afeb6785d8a2f449762505404f278891f98f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f458231d053e5f4c31569f35dcb7d8aca1eeeaf2d6ec620a238a3e75d57c8f\",\"dweb:/ipfs/QmfEddjsgiHg2WQrUuVNMjpdXqZBv8oTzxZZuZsJ8LmyYB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786\",\"dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3066cb3bf6bc79242bcdb4974105766e4dcbfd8fbe0e7c89ef40a0383b0553f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20ddbd9a7de54e8a439349221536a3fa6898d34141b345f76b4061743343a7c\",\"dweb:/ipfs/Qmags5zy255X8pkxWsGMk66qSBN5rGQEZEFuZrwWfTA2JK\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xab89bb686210320f9ccdd99560f709b683e1a2f22d479ba2644bb4144d1d1f14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1be3787f20fa4c78abcfcdc626ea444be8c63dcf175f30c8aa3c412f53f99cf4\",\"dweb:/ipfs/Qmd23Rg6JTekFKX9tQEQBjEJ8YNpBxmoyiXbSPCqJWfP1e\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x7c08bea8e975fa8e5e635a7753a9442b3d58f501c3a9951df8eb45581054228d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a2df17f29ce4f62621d8ffc7bbd5a08c8cbd589d9ba0f35aeaa66e4b8905dc3\",\"dweb:/ipfs/QmXKqV72yDUKF7CEZowWLstGNdUtzTffPJVtzvj25rxaH8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0xc586a4a6ed2ea1f869835475190cbbcbe1f93aba6a532429edcc930d40eb5a0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bf80d4b7094c54644be2c7d2f986e0de998d0409597ca141f1b2cec723ab626\",\"dweb:/ipfs/QmPrfihVYQHWtDNB3zv6LRfT9p8Hdff9B6PdHRXYKb3npo\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "upgradeTo(address)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@safe/=lib/safe-contracts/",
        ":@uniswapv2/=src/src-0_6_x/uniswapv2/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":safe-contracts/=lib/safe-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": "UUPSUpgradeable"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0xa63f31ccb74383b73c47e617ab3d0848c2775d04e45d48623b4f7282fc00f1ce",
        "urls": [
          "bzz-raw://4c830dbffb8c23001fce1311eab2faf42d622e3907fcf86ce14a44e94f9eb45d",
          "dweb:/ipfs/QmU4n7MJpCTizCVzC5fB8GoqQUcszA7eNRjKvxmBnLa1fn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x20db54d070f5faa97267693b8d01afeb6785d8a2f449762505404f278891f98f",
        "urls": [
          "bzz-raw://68f458231d053e5f4c31569f35dcb7d8aca1eeeaf2d6ec620a238a3e75d57c8f",
          "dweb:/ipfs/QmfEddjsgiHg2WQrUuVNMjpdXqZBv8oTzxZZuZsJ8LmyYB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x52ee1221297fa7b84a8242b4976721a124debd033fc1d51d1e1ae2d005cfc233",
        "urls": [
          "bzz-raw://225aa18e0ecd6484d070af3358372c933893b1434368732a429cb79b603d7786",
          "dweb:/ipfs/QmVUnj8PjgFCfhLnwwGE1EZPW4BHqpnKLKj45ZPTCQQX5V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3066cb3bf6bc79242bcdb4974105766e4dcbfd8fbe0e7c89ef40a0383b0553f6",
        "urls": [
          "bzz-raw://f20ddbd9a7de54e8a439349221536a3fa6898d34141b345f76b4061743343a7c",
          "dweb:/ipfs/Qmags5zy255X8pkxWsGMk66qSBN5rGQEZEFuZrwWfTA2JK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xab89bb686210320f9ccdd99560f709b683e1a2f22d479ba2644bb4144d1d1f14",
        "urls": [
          "bzz-raw://1be3787f20fa4c78abcfcdc626ea444be8c63dcf175f30c8aa3c412f53f99cf4",
          "dweb:/ipfs/Qmd23Rg6JTekFKX9tQEQBjEJ8YNpBxmoyiXbSPCqJWfP1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x7c08bea8e975fa8e5e635a7753a9442b3d58f501c3a9951df8eb45581054228d",
        "urls": [
          "bzz-raw://3a2df17f29ce4f62621d8ffc7bbd5a08c8cbd589d9ba0f35aeaa66e4b8905dc3",
          "dweb:/ipfs/QmXKqV72yDUKF7CEZowWLstGNdUtzTffPJVtzvj25rxaH8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0xc586a4a6ed2ea1f869835475190cbbcbe1f93aba6a532429edcc930d40eb5a0c",
        "urls": [
          "bzz-raw://9bf80d4b7094c54644be2c7d2f986e0de998d0409597ca141f1b2cec723ab626",
          "dweb:/ipfs/QmPrfihVYQHWtDNB3zv6LRfT9p8Hdff9B6PdHRXYKb3npo"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
    "id": 25473,
    "exportedSymbols": {
      "AddressUpgradeable": [
        25756
      ],
      "ERC1967UpgradeUpgradeable": [
        25157
      ],
      "IBeaconUpgradeable": [
        25167
      ],
      "IERC1822ProxiableUpgradeable": [
        24788
      ],
      "Initializable": [
        25336
      ],
      "StorageSlotUpgradeable": [
        25858
      ],
      "UUPSUpgradeable": [
        25472
      ]
    },
    "nodeType": "SourceUnit",
    "src": "118:4748:19",
    "nodes": [
      {
        "id": 25338,
        "nodeType": "PragmaDirective",
        "src": "118:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 25339,
        "nodeType": "ImportDirective",
        "src": "145:56:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol",
        "file": "../../interfaces/draft-IERC1822Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25473,
        "sourceUnit": 24789,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25340,
        "nodeType": "ImportDirective",
        "src": "203:50:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
        "file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25473,
        "sourceUnit": 25158,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25341,
        "nodeType": "ImportDirective",
        "src": "255:29:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "./Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25473,
        "sourceUnit": 25337,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25472,
        "nodeType": "ContractDefinition",
        "src": "949:3915:19",
        "nodes": [
          {
            "id": 25354,
            "nodeType": "FunctionDefinition",
            "src": "1064:68:19",
            "nodes": [],
            "body": {
              "id": 25353,
              "nodeType": "Block",
              "src": "1124:8:19",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25351,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25350,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25281,
                  "src": "1107:16:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1107:16:19"
              }
            ],
            "name": "__UUPSUpgradeable_init",
            "nameLocation": "1073:22:19",
            "parameters": {
              "id": 25349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1095:2:19"
            },
            "returnParameters": {
              "id": 25352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:19"
            },
            "scope": 25472,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25360,
            "nodeType": "FunctionDefinition",
            "src": "1140:78:19",
            "nodes": [],
            "body": {
              "id": 25359,
              "nodeType": "Block",
              "src": "1210:8:19",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25357,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25356,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25281,
                  "src": "1193:16:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1193:16:19"
              }
            ],
            "name": "__UUPSUpgradeable_init_unchained",
            "nameLocation": "1149:32:19",
            "parameters": {
              "id": 25355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:19"
            },
            "returnParameters": {
              "id": 25358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1210:0:19"
            },
            "scope": 25472,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25367,
            "nodeType": "VariableDeclaration",
            "src": "1317:48:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25361,
              "nodeType": "StructuredDocumentation",
              "src": "1224:87:19",
              "text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
            },
            "mutability": "immutable",
            "name": "__self",
            "nameLocation": "1343:6:19",
            "scope": 25472,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25362,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1317:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 25365,
                  "name": "this",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -28,
                  "src": "1360:4:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_UUPSUpgradeable_$25472",
                    "typeString": "contract UUPSUpgradeable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_contract$_UUPSUpgradeable_$25472",
                    "typeString": "contract UUPSUpgradeable"
                  }
                ],
                "id": 25364,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1352:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 25363,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1352:7:19",
                  "typeDescriptions": {}
                }
              },
              "id": 25366,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1352:13:19",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 25390,
            "nodeType": "ModifierDefinition",
            "src": "1879:230:19",
            "nodes": [],
            "body": {
              "id": 25389,
              "nodeType": "Block",
              "src": "1900:209:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25373,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1927:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSUpgradeable_$25472",
                                "typeString": "contract UUPSUpgradeable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UUPSUpgradeable_$25472",
                                "typeString": "contract UUPSUpgradeable"
                              }
                            ],
                            "id": 25372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1919:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25371,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1919:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1919:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 25375,
                          "name": "__self",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25367,
                          "src": "1936:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1919:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
                        "id": 25377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1944:46:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
                          "typeString": "literal_string \"Function must be called through delegatecall\""
                        },
                        "value": "Function must be called through delegatecall"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
                          "typeString": "literal_string \"Function must be called through delegatecall\""
                        }
                      ],
                      "id": 25370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1911:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1911:80:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25379,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:80:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 25381,
                            "name": "_getImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24835,
                            "src": "2010:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 25382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2010:20:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25383,
                          "name": "__self",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25367,
                          "src": "2034:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2010:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
                        "id": 25385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2042:46:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
                          "typeString": "literal_string \"Function must be called through active proxy\""
                        },
                        "value": "Function must be called through active proxy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
                          "typeString": "literal_string \"Function must be called through active proxy\""
                        }
                      ],
                      "id": 25380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2002:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2002:87:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25387,
                  "nodeType": "ExpressionStatement",
                  "src": "2002:87:19"
                },
                {
                  "id": 25388,
                  "nodeType": "PlaceholderStatement",
                  "src": "2100:1:19"
                }
              ]
            },
            "documentation": {
              "id": 25368,
              "nodeType": "StructuredDocumentation",
              "src": "1374:499:19",
              "text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
            },
            "name": "onlyProxy",
            "nameLocation": "1888:9:19",
            "parameters": {
              "id": 25369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1897:2:19"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25405,
            "nodeType": "ModifierDefinition",
            "src": "2321:147:19",
            "nodes": [],
            "body": {
              "id": 25404,
              "nodeType": "Block",
              "src": "2345:123:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 25396,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2372:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSUpgradeable_$25472",
                                "typeString": "contract UUPSUpgradeable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UUPSUpgradeable_$25472",
                                "typeString": "contract UUPSUpgradeable"
                              }
                            ],
                            "id": 25395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2364:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2364:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2364:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25398,
                          "name": "__self",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25367,
                          "src": "2381:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2364:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
                        "id": 25400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2389:58:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
                          "typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
                        },
                        "value": "UUPSUpgradeable: must not be called through delegatecall"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
                          "typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
                        }
                      ],
                      "id": 25393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2356:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2356:92:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25402,
                  "nodeType": "ExpressionStatement",
                  "src": "2356:92:19"
                },
                {
                  "id": 25403,
                  "nodeType": "PlaceholderStatement",
                  "src": "2459:1:19"
                }
              ]
            },
            "documentation": {
              "id": 25391,
              "nodeType": "StructuredDocumentation",
              "src": "2117:198:19",
              "text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
            },
            "name": "notDelegated",
            "nameLocation": "2330:12:19",
            "parameters": {
              "id": 25392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2342:2:19"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25417,
            "nodeType": "FunctionDefinition",
            "src": "3066:133:19",
            "nodes": [],
            "body": {
              "id": 25416,
              "nodeType": "Block",
              "src": "3153:46:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25414,
                    "name": "_IMPLEMENTATION_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24817,
                    "src": "3171:20:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 25413,
                  "id": 25415,
                  "nodeType": "Return",
                  "src": "3164:27:19"
                }
              ]
            },
            "baseFunctions": [
              24787
            ],
            "documentation": {
              "id": 25406,
              "nodeType": "StructuredDocumentation",
              "src": "2476:584:19",
              "text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
            },
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25410,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25409,
                  "name": "notDelegated",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25405,
                  "src": "3122:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3122:12:19"
              }
            ],
            "name": "proxiableUUID",
            "nameLocation": "3075:13:19",
            "overrides": {
              "id": 25408,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3113:8:19"
            },
            "parameters": {
              "id": 25407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3088:2:19"
            },
            "returnParameters": {
              "id": 25413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25412,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25417,
                  "src": "3144:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25411,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3143:9:19"
            },
            "scope": 25472,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 25439,
            "nodeType": "FunctionDefinition",
            "src": "3388:200:19",
            "nodes": [],
            "body": {
              "id": 25438,
              "nodeType": "Block",
              "src": "3461:127:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25426,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25420,
                        "src": "3490:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25425,
                      "name": "_authorizeUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25466,
                      "src": "3472:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3472:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25428,
                  "nodeType": "ExpressionStatement",
                  "src": "3472:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25430,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25420,
                        "src": "3541:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3570:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "3560:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 25431,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3564:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 25434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3560:12:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 25435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3574:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25429,
                      "name": "_upgradeToAndCallUUPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24955,
                      "src": "3519:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 25436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3519:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25437,
                  "nodeType": "ExpressionStatement",
                  "src": "3519:61:19"
                }
              ]
            },
            "documentation": {
              "id": 25418,
              "nodeType": "StructuredDocumentation",
              "src": "3207:175:19",
              "text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
            },
            "functionSelector": "3659cfe6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25423,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25422,
                  "name": "onlyProxy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25390,
                  "src": "3451:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3451:9:19"
              }
            ],
            "name": "upgradeTo",
            "nameLocation": "3397:9:19",
            "parameters": {
              "id": 25421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25420,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3415:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25439,
                  "src": "3407:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25419,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3407:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3406:27:19"
            },
            "returnParameters": {
              "id": 25424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3461:0:19"
            },
            "scope": 25472,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 25460,
            "nodeType": "FunctionDefinition",
            "src": "3847:225:19",
            "nodes": [],
            "body": {
              "id": 25459,
              "nodeType": "Block",
              "src": "3954:118:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25450,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25442,
                        "src": "3983:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25449,
                      "name": "_authorizeUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25466,
                      "src": "3965:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 25451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3965:36:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25452,
                  "nodeType": "ExpressionStatement",
                  "src": "3965:36:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25454,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25442,
                        "src": "4034:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25455,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25444,
                        "src": "4053:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4059:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25453,
                      "name": "_upgradeToAndCallUUPS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24955,
                      "src": "4012:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 25457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:52:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25458,
                  "nodeType": "ExpressionStatement",
                  "src": "4012:52:19"
                }
              ]
            },
            "documentation": {
              "id": 25440,
              "nodeType": "StructuredDocumentation",
              "src": "3596:245:19",
              "text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
            },
            "functionSelector": "4f1ef286",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25447,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25446,
                  "name": "onlyProxy",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25390,
                  "src": "3944:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "3944:9:19"
              }
            ],
            "name": "upgradeToAndCall",
            "nameLocation": "3856:16:19",
            "parameters": {
              "id": 25445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25442,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "3881:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25460,
                  "src": "3873:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3873:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25444,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3913:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25460,
                  "src": "3900:17:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25443,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3900:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3872:46:19"
            },
            "returnParameters": {
              "id": 25448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3954:0:19"
            },
            "scope": 25472,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 25466,
            "nodeType": "FunctionDefinition",
            "src": "4492:71:19",
            "nodes": [],
            "documentation": {
              "id": 25461,
              "nodeType": "StructuredDocumentation",
              "src": "4080:406:19",
              "text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_authorizeUpgrade",
            "nameLocation": "4501:17:19",
            "parameters": {
              "id": 25464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25463,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "4527:17:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25466,
                  "src": "4519:25:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4519:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4518:27:19"
            },
            "returnParameters": {
              "id": 25465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4562:0:19"
            },
            "scope": 25472,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 25471,
            "nodeType": "VariableDeclaration",
            "src": "4835:25:19",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 25467,
              "nodeType": "StructuredDocumentation",
              "src": "4571:258:19",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "4855:5:19",
            "scope": 25472,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 25468,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4835:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 25470,
              "length": {
                "hexValue": "3530",
                "id": 25469,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4843:2:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "4835:11:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 25343,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25336,
              "src": "986:13:19"
            },
            "id": 25344,
            "nodeType": "InheritanceSpecifier",
            "src": "986:13:19"
          },
          {
            "baseName": {
              "id": 25345,
              "name": "IERC1822ProxiableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24788,
              "src": "1001:28:19"
            },
            "id": 25346,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:28:19"
          },
          {
            "baseName": {
              "id": 25347,
              "name": "ERC1967UpgradeUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25157,
              "src": "1031:25:19"
            },
            "id": 25348,
            "nodeType": "InheritanceSpecifier",
            "src": "1031:25:19"
          }
        ],
        "canonicalName": "UUPSUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25342,
          "nodeType": "StructuredDocumentation",
          "src": "288:659:19",
          "text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          25472,
          25157,
          24788,
          25336
        ],
        "name": "UUPSUpgradeable",
        "nameLocation": "967:15:19",
        "scope": 25473,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}